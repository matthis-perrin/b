- Templates should be valid projects generated by the code itself
- NodeJS 18 https://github.com/tsconfig/bases
- Ability to generate a "flat" workspace (no dependencies to @matthis/\*)
- API typing and routing
- Add cloudwatch trigger option for the Lambda function
- Ensure Lambda API work by itself (not in a web-app)
- Add node-script workspace fragment
- API authentication
- Server side rendering
- Pre-connected user in index.html
- Favicon generation
- Add instructions/commands after creating workspace (ie: code project/app.code-workspace, yarn deploy, etc)
- Remove API gateway terraform for standalone lambda
- Different template for different lambda trigger (API gateway proxy vs Cloudwatch trigger vs SQS trigger)
- Use @types/aws-lambda
- Centralize build lib and code
- shared-node, shared-web and shared directory with lib sharing
- allow multiple yarn watch of lamda projects in parallele (conflict with port)
- Increase default lambda timeout
- Add lambda alerts, better logging, dead letter queue, etc
- Warn when overriding files (show changes?) when add project to workspace
- Handle CORS in backend/frontend when in dev
- Proxy lambda response headers in webpack lambda plugin
- Auto lambda monitoring and error logging
- Migrate from eslint-plugin-node to eslint-plugin-n
- Move cloudwatch trigger terraform to the file of the lambda it triggers
- For asynchronous lambda are retried 2 times (remove or allow configuration)
- babelLoader (Node version is hardcoded, corejs too)
- eslint-simple-import-sort don't group @shared-web for node version
- Don't generate .mjs, have "type": "module" in the package.json next to it
