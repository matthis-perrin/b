import {EslintMetadata} from '../models';

export const eslintUnicorn: EslintMetadata = {
  plugin: ['unicorn'],
  dependencies: {
    'eslint-plugin-unicorn': '33.0.x',
  },
  settings: {},
  allOff: {
    'unicorn/better-regex': 'off',
    'unicorn/catch-error-name': 'off',
    'unicorn/consistent-destructuring': 'off',
    'unicorn/consistent-function-scoping': 'off',
    'unicorn/custom-error-definition': 'off',
    'unicorn/empty-brace-spaces': 'off',
    'unicorn/error-message': 'off',
    'unicorn/escape-case': 'off',
    'unicorn/expiring-todo-comments': 'off',
    'unicorn/explicit-length-check': 'off',
    'unicorn/filename-case': 'off',
    'unicorn/import-index': 'off',
    'unicorn/import-style': 'off',
    'unicorn/new-for-builtins': 'off',
    'unicorn/no-abusive-eslint-disable': 'off',
    'unicorn/no-array-callback-reference': 'off',
    'unicorn/no-array-for-each': 'off',
    'unicorn/no-array-push-push': 'off',
    'unicorn/no-array-reduce': 'off',
    'unicorn/no-console-spaces': 'off',
    'unicorn/no-document-cookie': 'off',
    'unicorn/no-for-loop': 'off',
    'unicorn/no-hex-escape': 'off',
    'unicorn/no-instanceof-array': 'off',
    'unicorn/no-keyword-prefix': 'off',
    'unicorn/no-lonely-if': 'off',
    'unicorn/no-nested-ternary': 'off',
    'unicorn/no-new-array': 'off',
    'unicorn/no-new-buffer': 'off',
    'unicorn/no-null': 'off',
    'unicorn/no-object-as-default-parameter': 'off',
    'unicorn/no-process-exit': 'off',
    'unicorn/no-static-only-class': 'off',
    'unicorn/no-this-assignment': 'off',
    'unicorn/no-unreadable-array-destructuring': 'off',
    'unicorn/no-unsafe-regex': 'off',
    'unicorn/no-unused-properties': 'off',
    'unicorn/no-useless-undefined': 'off',
    'unicorn/no-zero-fractions': 'off',
    'unicorn/number-literal-case': 'off',
    'unicorn/numeric-separators-style': 'off',
    'unicorn/prefer-add-event-listener': 'off',
    'unicorn/prefer-array-find': 'off',
    'unicorn/prefer-array-flat-map': 'off',
    'unicorn/prefer-array-index-of': 'off',
    'unicorn/prefer-date-now': 'off',
    'unicorn/prefer-dom-node-append': 'off',
    'unicorn/prefer-dom-node-dataset': 'off',
    'unicorn/prefer-dom-node-remove': 'off',
    'unicorn/prefer-dom-node-text-content': 'off',
    'unicorn/prefer-includes': 'off',
    'unicorn/prefer-keyboard-event-key': 'off',
    'unicorn/prefer-math-trunc': 'off',
    'unicorn/prefer-modern-dom-apis': 'off',
    'unicorn/prefer-module': 'off',
    'unicorn/prefer-negative-index': 'off',
    'unicorn/prefer-node-protocol': 'off',
    'unicorn/prefer-number-properties': 'off',
    'unicorn/prefer-object-has-own': 'off',
    'unicorn/prefer-optional-catch-binding': 'off',
    'unicorn/prefer-prototype-methods': 'off',
    'unicorn/prefer-query-selector': 'off',
    'unicorn/prefer-reflect-apply': 'off',
    'unicorn/prefer-regexp-test': 'off',
    'unicorn/prefer-set-has': 'off',
    'unicorn/prefer-spread': 'off',
    'unicorn/prefer-string-replace-all': 'off',
    'unicorn/prefer-string-slice': 'off',
    'unicorn/prefer-string-starts-ends-with': 'off',
    'unicorn/prefer-string-trim-start-end': 'off',
    'unicorn/prefer-ternary': 'off',
    'unicorn/prefer-type-error': 'off',
    'unicorn/prevent-abbreviations': 'off',
    'unicorn/require-array-join-separator': 'off',
    'unicorn/require-number-to-fixed-digits-argument': 'off',
    'unicorn/string-content': 'off',
    'unicorn/switch': 'off',
    'unicorn/throw-new-error': 'off',
  },
  onlyOn: {
    'unicorn/better-regex': 'warn',
    'unicorn/catch-error-name': ['warn', {name: 'err'}],
    'unicorn/consistent-destructuring': 'warn',
    'unicorn/consistent-function-scoping': 'warn',
    'unicorn/custom-error-definition': 'warn',
    'unicorn/error-message': 'warn',
    'unicorn/escape-case': 'warn',
    'unicorn/filename-case': ['warn', {cases: {snakeCase: true}}],
    'unicorn/no-array-for-each': 'warn',
    'unicorn/no-array-push-push': 'warn',
    'unicorn/no-document-cookie': 'warn',
    'unicorn/no-for-loop': 'warn',
    'unicorn/no-hex-escape': 'warn',
    'unicorn/no-instanceof-array': 'warn',
    'unicorn/no-lonely-if': 'warn',
    'unicorn/no-object-as-default-parameter': 'warn',
    'unicorn/no-this-assignment': 'warn',
    'unicorn/no-unreadable-array-destructuring': 'warn',
    'unicorn/no-unsafe-regex': 'warn',
    'unicorn/no-zero-fractions': 'warn',
    'unicorn/prefer-array-find': 'warn',
    'unicorn/prefer-array-flat': 'warn',
    'unicorn/prefer-array-flat-map': 'warn',
    'unicorn/prefer-array-index-of': 'warn',
    'unicorn/prefer-includes': 'warn',
    'unicorn/prefer-keyboard-event-key': 'warn',
    'unicorn/prefer-object-has-own': 'warn',
    'unicorn/prefer-math-trunc': 'warn',
    'unicorn/prefer-module': 'warn',
    'unicorn/prefer-negative-index': 'warn',
    'unicorn/prefer-prototype-methods': 'warn',
    'unicorn/prefer-regexp-test': 'warn',
    'unicorn/prefer-set-has': 'warn',
    'unicorn/prefer-spread': 'warn',
    'unicorn/prefer-string-slice': 'warn',
    'unicorn/prefer-string-starts-ends-with': 'warn',
    'unicorn/prefer-string-trim-start-end': 'warn',
    'unicorn/prefer-ternary': 'warn',
    'unicorn/require-array-join-separator': 'warn',
    'unicorn/require-number-to-fixed-digits-argument': 'warn',
    'unicorn/no-static-only-class': 'warn',
    'unicorn/throw-new-error': 'warn',
  },
};

/* eslint-enable @typescript-eslint/naming-convention */
