{"version":3,"file":"index.js","mappings":"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ACV;AACA;AACA;AACA;AACA,CAAC,CAAC+D,IAAI,CAAC,CAAC;AACR;;;;;;;;;;AClDO,SAASiC,uCAAuCA,CACrDhE,aAA4B,EAC5BlB,WAAwB,EAChB;EACR,MAAMuF,UAAU,GAAGvF,WAAW,CAACwF,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;EAC1E,MAAMC,QAAQ,GAAI,GAAEH,UAAW,YAAW;EAC1C,OAAQ;AACV,UAAUvF,WAAY;AACtB,8CAA8CA,WAAY;AAC1D,yDAAyDkB,aAAc,IAAGlB,WAAY;AACtF;AACA;AACA,0CAA0CA,WAAY;AACtD;AACA;AACA,qBAAqB0F,QAAS;AAC9B,sBAAsB1F,WAAY;AAClC;AACA;AACA,uEAAuEA,WAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B0F,QAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD1F,WAAY;AAChE,GAAG,CAACiD,IAAI,CAAC,CAAC;AACV;;;;;;;;;;ACzEO,SAASkC,uBAAuBA,CACrCjE,aAA4B,EAC5BlB,WAAwB,EACxB2F,IAAoB,EACZ;EACR,MAAM;IAACL;EAAG,CAAC,GAAGK,IAAI;EAClB,OAAQ;AACV;AACA,kCAAkC3F,WAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4BA,WAAY;AACxC;AACA,oBAAoBA,WAAY;AAChC;AACA;AACA;AACA,kCAAkCA,WAAY;AAC9C,yBAAyBkB,aAAc,IAAGlB,WAAY;AACtD,sCAAsCA,WAAY;AAClD,sCAAsCA,WAAY;AAClD;AACA;AACA,qCAAqCA,WAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,WAAY;AACtB,sCAAsCA,WAAY;AAClD,2CAA2CkB,aAAc,IAAGlB,WAAY;AACxE;AACA;AACA,EACEsF,GAAG,GACE;AACP,sCAAsCtF,WAAY;AAClD,6CAA6CA,WAAY;AACzD;AACA;AACA;AACA,UAAUA,WAAY;AACtB,0CAA0CA,WAAY;AACtD,0CAA0CkB,aAAc,IAAGlB,WAAY;AACvE;AACA,CAAC,CAACiD,IAAI,CAAC,CAAC,GACF,EACL;AACD;AACA,2BAA2BjD,WAAY;AACvC,YAAYkB,aAAc,IAAGlB,WAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAckB,aAAc,IAAGlB,WAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAckB,aAAc,IAAGlB,WAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAckB,aAAc,IAAGlB,WAAY;AAC3C,4CAA4CA,WAAY;AACxD;AACA;AACA,CAAC,CAACiD,IAAI,CAAC,CAAC;AACR;;;;;;;;;;ACpHO,SAASmC,4BAA4BA,CAAClE,aAA4B,EAAU;EACjF,OAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBA,aAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC+B,IAAI,CAAC,CAAC;AACR;;;;;;;;;;AC1BO,SAASoC,yBAAyBA,CACvCnE,aAA4B,EAC5B0E,eAA8B,EACtB;EACR,MAAML,UAAU,GAAGrE,aAAa,CAACsE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC;EAE7E,MAAMI,WAAW,GAAI;AACvB;AACA,qBAAqBN,UAAW;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC,CAACtC,IAAI,CAAC,CAAC;EAEN,MAAM6C,iBAAiB,GAAI;AAC7B;AAC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","sources":["webpack://b/external node-commonjs \"node:fs/promises\"","webpack://b/external node-commonjs \"node:path\"","webpack://b/external node-commonjs \"prompts\"","webpack://b/./src/fs.ts","webpack://b/external node-commonjs \"node:child_process\"","webpack://b/external node-commonjs \"node:fs\"","webpack://b/external node-commonjs \"prettier\"","webpack://b/./src/models.ts","webpack://b/./src/project/generate_workspace.ts","webpack://b/external node-commonjs \"node:url\"","webpack://b/./src/project/generate_project.ts","webpack://b/./src/project/gitignore.ts","webpack://b/./src/project/package_json.ts","webpack://b/./src/versions.ts","webpack://b/./src/project/terraform/all.ts","webpack://b/./src/project/terraform/cloudfront.ts","webpack://b/./src/project/terraform/lambda.ts","webpack://b/./src/project/terraform/provider.ts","webpack://b/./src/project/terraform/s3.ts","webpack://b/./src/type_utils.ts","webpack://b/./src/project/terraform/dynamo.ts","webpack://b/./src/project/vscode_workspace.ts","webpack://b/webpack/bootstrap","webpack://b/webpack/runtime/compat get default export","webpack://b/webpack/runtime/define property getters","webpack://b/webpack/runtime/hasOwnProperty shorthand","webpack://b/webpack/runtime/make namespace object","webpack://b/./src/project/init_project.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs/promises\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:path\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"prompts\");","import {exec} from 'node:child_process';\nimport {promises} from 'node:fs';\nimport {dirname, join} from 'node:path';\n\nimport {BuiltInParserName, format} from 'prettier';\n\nexport const {access, readFile, readdir, stat} = promises;\nconst {writeFile, mkdir, rm} = promises;\n\nexport async function writeJsonFile(path: string, json: unknown): Promise<void> {\n  await writeRawFile(path, `${JSON.stringify(json, undefined, 2)}\\n`);\n}\n\nconst prettierConfig = (parser: BuiltInParserName) =>\n  ({\n    parser,\n    printWidth: 100,\n    singleQuote: true,\n    trailingComma: 'es5',\n    bracketSpacing: false,\n    arrowParens: 'avoid',\n    endOfLine: 'auto',\n  }) as const;\n\nexport async function prettierFormat(str: string, parser: BuiltInParserName): Promise<string> {\n  return format(str, prettierConfig(parser));\n}\n\nasync function writePrettyFile(\n  parser: BuiltInParserName,\n  path: string,\n  code: string\n): Promise<void> {\n  await writeRawFile(path, await prettierFormat(code, parser));\n}\n\nexport async function writeJsFile(path: string, js: string): Promise<void> {\n  return writePrettyFile('babel', path, js);\n}\n\nexport async function writeTsFile(path: string, ts: string): Promise<void> {\n  return writePrettyFile('typescript', path, ts);\n}\n\nexport async function writeRawFile(path: string, content: string): Promise<void> {\n  await mkdir(dirname(path), {recursive: true});\n  await writeFile(path, content);\n}\n\nexport async function writeRawFileIfNotExists(path: string, content: string): Promise<void> {\n  if (await exists(path)) {\n    return;\n  }\n  await writeRawFile(path, content);\n}\n\nexport async function rmDir(dirPath: string): Promise<void> {\n  await rm(dirPath, {recursive: true, force: true});\n}\n\nexport async function cleanDir(dirPath: string): Promise<void> {\n  try {\n    await rmDir(dirPath);\n  } finally {\n    await mkdir(dirPath, {recursive: true});\n  }\n}\n\nexport async function cp(from: string, to: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    exec(`cp -R ${from} ${to}`, err => (err ? reject(err) : resolve()));\n  });\n}\n\nexport async function exists(path: string): Promise<boolean> {\n  try {\n    await access(path);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function maybeReadFile(path: string): Promise<string | undefined> {\n  try {\n    const fileContent = await readFile(path);\n    return fileContent.toString();\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function listFiles(path: string): Promise<string[]> {\n  const files: string[] = [];\n  const ents = await readdir(path, {withFileTypes: true});\n  const promises: Promise<void>[] = [];\n  for (const ent of ents) {\n    const entPath = join(path, ent.name);\n    if (ent.isDirectory()) {\n      promises.push(\n        listFiles(entPath).then(subFiles => {\n          files.push(...subFiles);\n        })\n      );\n    } else if (ent.isFile()) {\n      files.push(entPath);\n    }\n  }\n  await Promise.all(promises);\n  return files;\n}\n","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:child_process\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"prettier\");","import {Brand} from '@src/type_utils';\n\nexport type WorkspaceName = Brand<string, 'WorkspaceName'>;\nexport type ProjectName = Brand<string, 'ProjectName'>;\n\n//\n// Project type\n//\n\nexport enum ProjectType {\n  Web = 'web',\n  LambdaFunction = 'lambda_function',\n  LambdaApi = 'lambda_api',\n  LambdaWebApi = 'lambda_web_api',\n  NodeScript = 'node_script',\n  Shared = 'shared',\n  SharedNode = 'shared-node',\n}\n\nexport enum EslintType {\n  Web = 'web',\n  Node = 'node',\n  Lib = 'lib',\n}\n\nexport enum TsConfigType {\n  Web = 'web',\n  Node = 'node',\n  Lib = 'lib',\n}\nexport enum WebpackType {\n  Web = 'web',\n  Lib = 'lib', // shared\n  Lambda = 'lambda',\n  NodeScript = 'node-script',\n}\n\nexport interface ProjectTypeMetadata {\n  eslint: EslintType;\n  tsconfig: TsConfigType;\n  webpack?: WebpackType;\n}\n\nexport const PROJECT_TYPE_TO_METADATA = {\n  [ProjectType.Web]: {\n    eslint: EslintType.Web,\n    tsconfig: TsConfigType.Web,\n    webpack: WebpackType.Web,\n  },\n  [ProjectType.LambdaFunction]: {\n    eslint: EslintType.Node,\n    tsconfig: TsConfigType.Node,\n    webpack: WebpackType.Lambda,\n  },\n  [ProjectType.LambdaApi]: {\n    eslint: EslintType.Node,\n    tsconfig: TsConfigType.Node,\n    webpack: WebpackType.Lambda,\n  },\n  [ProjectType.LambdaWebApi]: {\n    eslint: EslintType.Node,\n    tsconfig: TsConfigType.Node,\n    webpack: WebpackType.Lambda,\n  },\n  [ProjectType.NodeScript]: {\n    eslint: EslintType.Node,\n    tsconfig: TsConfigType.Node,\n    webpack: WebpackType.NodeScript,\n  },\n  [ProjectType.Shared]: {\n    eslint: EslintType.Lib,\n    tsconfig: TsConfigType.Lib,\n    webpack: WebpackType.Lib,\n  },\n  [ProjectType.SharedNode]: {\n    eslint: EslintType.Node,\n    tsconfig: TsConfigType.Node,\n    webpack: WebpackType.Lib,\n  },\n} satisfies Record<ProjectType, ProjectTypeMetadata>;\n\n//\n// Workspace Fragment type\n//\n\nexport enum WorkspaceFragmentType {\n  StaticWebsite = 'static-website',\n  StandaloneLambda = 'standalone-lambda',\n  ApiLambda = 'api-lambda',\n  WebApp = 'web-app',\n  NodeScript = 'node-script',\n  Shared = 'shared',\n  SharedNode = 'shared-node',\n}\n\ninterface WorkspaceFragmentBase {\n  type: WorkspaceFragmentType;\n}\n\nexport interface WorkspaceFragmentRegistry {\n  [WorkspaceFragmentType.StaticWebsite]: {\n    type: WorkspaceFragmentType.StaticWebsite;\n    websiteName: ProjectName;\n  };\n  [WorkspaceFragmentType.StandaloneLambda]: {\n    type: WorkspaceFragmentType.StandaloneLambda;\n    lambdaName: ProjectName;\n  };\n  [WorkspaceFragmentType.ApiLambda]: {\n    type: WorkspaceFragmentType.ApiLambda;\n    lambdaName: ProjectName;\n  };\n  [WorkspaceFragmentType.WebApp]: {\n    type: WorkspaceFragmentType.WebApp;\n    websiteName: ProjectName;\n    lambdaName: ProjectName;\n  };\n  [WorkspaceFragmentType.NodeScript]: {\n    type: WorkspaceFragmentType.NodeScript;\n    scriptName: ProjectName;\n  };\n  [WorkspaceFragmentType.Shared]: {\n    type: WorkspaceFragmentType.Shared;\n  };\n  [WorkspaceFragmentType.SharedNode]: {\n    type: WorkspaceFragmentType.SharedNode;\n  };\n}\n\ntype RegistryIsValid = WorkspaceFragmentRegistry extends Record<\n  WorkspaceFragmentType,\n  WorkspaceFragmentBase\n>\n  ? boolean\n  : never;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRegistry(): RegistryIsValid {\n  return true;\n}\n\nexport type WorkspaceFragment = WorkspaceFragmentRegistry[keyof WorkspaceFragmentRegistry];\n","import {execSync} from 'node:child_process';\nimport {cp} from 'node:fs/promises';\nimport {join, relative} from 'node:path';\nimport {fileURLToPath} from 'node:url';\n\nimport {writeJsonFile, writeRawFile, writeRawFileIfNotExists} from '@src/fs';\nimport {\n  ProjectName,\n  ProjectType,\n  WorkspaceFragment,\n  WorkspaceFragmentType,\n  WorkspaceName,\n} from '@src/models';\nimport {generateProject} from '@src/project/generate_project';\nimport {generateGitIgnore} from '@src/project/gitignore';\nimport {generateWorkspacePackageJson} from '@src/project/package_json';\nimport {\n  generateCommonTerraform,\n  generateDummyTerraformCredentials,\n  generateWorkspaceProjectTerraform,\n} from '@src/project/terraform/all';\nimport {generateDynamoTerraform} from '@src/project/terraform/dynamo';\nimport {generateCodeWorkspace} from '@src/project/vscode_workspace';\nimport {neverHappens} from '@src/type_utils';\n\nconst TEMPLATES_PATH = join(fileURLToPath(import.meta.url), '../templates');\n\nexport interface WorkspaceProject {\n  projectName: ProjectName;\n  type: ProjectType;\n  vars: Record<string, string>;\n}\n\nexport function getProjectsFromWorkspaceFragment(\n  fragment: WorkspaceFragment,\n  allFragments: WorkspaceFragment[]\n): WorkspaceProject[] {\n  if (fragment.type === WorkspaceFragmentType.StaticWebsite) {\n    return [\n      {\n        projectName: fragment.websiteName,\n        type: ProjectType.Web,\n        vars: {\n          __PROJECT_NAME__: fragment.websiteName,\n        },\n      },\n    ];\n  } else if (fragment.type === WorkspaceFragmentType.StandaloneLambda) {\n    return [\n      {\n        projectName: fragment.lambdaName,\n        type: ProjectType.LambdaFunction,\n        vars: {\n          __PROJECT_NAME__: fragment.lambdaName,\n        },\n      },\n    ];\n  } else if (fragment.type === WorkspaceFragmentType.ApiLambda) {\n    return [\n      {\n        projectName: fragment.lambdaName,\n        type: ProjectType.LambdaApi,\n        vars: {\n          __PROJECT_NAME__: fragment.lambdaName,\n          __BACKEND_NAME__: fragment.lambdaName,\n          __BACKEND_NAME_UPPERCASE__: fragment.lambdaName.toUpperCase(),\n        },\n      },\n    ];\n  } else if (fragment.type === WorkspaceFragmentType.WebApp) {\n    return [\n      {\n        projectName: fragment.websiteName,\n        type: ProjectType.Web,\n        vars: {\n          __PROJECT_NAME__: fragment.websiteName,\n          __BACKEND_NAME__: fragment.lambdaName,\n          __BACKEND_NAME_UPPERCASE__: fragment.lambdaName.toUpperCase(),\n        },\n      },\n      {\n        projectName: fragment.lambdaName,\n        type: ProjectType.LambdaWebApi,\n        vars: {\n          __PROJECT_NAME__: fragment.lambdaName,\n          __FRONTEND_NAME__: fragment.websiteName,\n          __FRONTEND_NAME_UPPERCASE__: fragment.websiteName.toUpperCase(),\n        },\n      },\n    ];\n  } else if (fragment.type === WorkspaceFragmentType.NodeScript) {\n    return [\n      {\n        projectName: fragment.scriptName,\n        type: ProjectType.NodeScript,\n        vars: {\n          __PROJECT_NAME__: fragment.scriptName,\n        },\n      },\n    ];\n  } else if (fragment.type === WorkspaceFragmentType.SharedNode) {\n    const projectName = 'shared-node' as ProjectName;\n    return [\n      {\n        projectName,\n        type: ProjectType.SharedNode,\n        vars: {\n          __PROJECT_NAME__: projectName,\n        },\n      },\n    ];\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  } else if (fragment.type === WorkspaceFragmentType.Shared) {\n    const projectName = 'shared' as ProjectName;\n    const otherVars: Record<string, string> = {};\n    for (const f of allFragments) {\n      if ('lambdaName' in f) {\n        otherVars['__BACKEND_NAME__'] = f.lambdaName;\n        otherVars['__BACKEND_NAME_UPPERCASE__'] = f.lambdaName.toUpperCase();\n      }\n    }\n    return [\n      {\n        projectName,\n        type: ProjectType.Shared,\n        vars: {\n          __PROJECT_NAME__: projectName,\n          ...otherVars,\n        },\n      },\n    ];\n  }\n  neverHappens(fragment, `Unknown ProjectType ${(fragment as WorkspaceFragment).type}`);\n}\n\nexport async function generateWorkspace(\n  dst: string,\n  workspaceName: WorkspaceName,\n  workspaceFragments: WorkspaceFragment[],\n  alreadyGenerated: ProjectName[]\n): Promise<void> {\n  const projects = workspaceFragments.flatMap(f =>\n    getProjectsFromWorkspaceFragment(f, workspaceFragments)\n  );\n\n  // Create projects files from templates\n  await Promise.all(\n    projects\n      .filter(p => !alreadyGenerated.includes(p.projectName))\n      .map(async project => generateProject(join(dst, project.projectName), project))\n  );\n\n  // Generate workspace root files\n  const SCRIPTS_PATH = join(fileURLToPath(import.meta.url), '../scripts');\n  await Promise.all([\n    // package.json\n    await writeJsonFile(\n      join(dst, 'package.json'),\n      generateWorkspacePackageJson(workspaceName, projects)\n    ),\n    // .gitignore\n    await writeRawFile(join(dst, '.gitignore'), generateGitIgnore()),\n    // app.code-workspace\n    await writeJsonFile(\n      join(dst, 'app.code-workspace'),\n      generateCodeWorkspace(workspaceName, workspaceFragments)\n    ),\n    // vscode folder\n    await cp(join(TEMPLATES_PATH, '.vscode'), join(dst, '.vscode'), {recursive: true, force: true}),\n    // setup.js\n    await cp(join(SCRIPTS_PATH, 'setup.js'), join(dst, 'setup.js')),\n    // deploy.js\n    await cp(join(SCRIPTS_PATH, 'deploy.js'), join(dst, 'deploy.js')),\n    // build.js\n    await cp(join(SCRIPTS_PATH, 'build.js'), join(dst, 'build.js')),\n  ]);\n\n  // Terraform folder generation\n  const terraformPath = join(dst, 'terraform');\n  await Promise.all([\n    writeRawFileIfNotExists(\n      join(terraformPath, '.aws-credentials'),\n      generateDummyTerraformCredentials()\n    ),\n    writeRawFileIfNotExists(\n      join(terraformPath, 'dynamo_table_dummy.tf'),\n      generateDynamoTerraform()\n    ),\n    writeRawFileIfNotExists(\n      join(terraformPath, 'base.tf'),\n      generateCommonTerraform(workspaceName, projects)\n    ),\n    ...projects.map(async p => {\n      const content = generateWorkspaceProjectTerraform(workspaceName, p);\n      if (content === undefined) {\n        return;\n      }\n      const name = `${p.projectName}_terraform`;\n      await writeRawFileIfNotExists(join(terraformPath, `${name}.tf`), content);\n    }),\n  ]);\n\n  // Run setup.js\n  console.log('Running post install script');\n  const commands = [`cd ${dst}`, `node setup.js`, `git init`];\n  execSync(commands.join(' && '), {stdio: ['ignore', 'inherit', 'inherit']});\n\n  // Final instructions\n  console.log(`Run the following to get started:`);\n  console.log(`cd ${relative(process.cwd(), dst)}; code app.code-workspace; yarn watch`);\n}\n","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:url\");","import {writeFile} from 'node:fs/promises';\nimport {join} from 'node:path';\nimport {fileURLToPath} from 'node:url';\n\nimport {cp, listFiles, prettierFormat, readFile, writeJsonFile} from '@src/fs';\nimport {WorkspaceProject} from '@src/project/generate_workspace';\n\nconst TEMPLATES_PATH = join(fileURLToPath(import.meta.url), '../templates');\n\nexport async function generateProject(dst: string, project: WorkspaceProject): Promise<void> {\n  const {projectName, type, vars} = project;\n  // Copy template files\n  await cp(join(TEMPLATES_PATH, type), dst);\n\n  // Replace name in package.json\n  const packageJsonPath = join(dst, 'package.json');\n  const packageJsonbuffer = await readFile(packageJsonPath);\n  const packageJson = JSON.parse(packageJsonbuffer.toString());\n  packageJson['name'] = projectName;\n  await writeJsonFile(packageJsonPath, packageJson);\n\n  // Replace variables\n  const files = await listFiles(dst);\n  await Promise.all(\n    files.map(async file => {\n      const buffer = await readFile(file);\n      const content = buffer.toString();\n      let newContent = content;\n      for (const [varName, varValue] of Object.entries(vars)) {\n        newContent = newContent.replaceAll(varName, varValue);\n      }\n      if (file.endsWith('.ts') || file.endsWith('.tsx')) {\n        newContent = await prettierFormat(newContent, 'typescript');\n      }\n      if (file.endsWith('.json')) {\n        newContent = await prettierFormat(newContent, 'json');\n      }\n      if (newContent !== content) {\n        await writeFile(file, newContent);\n      }\n    })\n  );\n}\n","export function generateGitIgnore(): string {\n  return `\n.DS_Store\nnode_modules\nbuild\ndist\ntmp\nyarn-error.log\n.yarn-warnings.log\nyarn.lock\nterraform/.terraform\nterraform/.terraform*\nterraform/*.tfstate.backup\nterraform/.aws-credentials\nterraform/archives\n*/log\n    `.trim();\n}\n","import {PROJECT_TYPE_TO_METADATA, WorkspaceName} from '@src/models';\nimport {WorkspaceProject} from '@src/project/generate_workspace';\nimport {PACKAGE_VERSIONS, TYPESCRIPT_VERSION} from '@src/versions';\n\nfunction uniq<T>(val: T[]): T[] {\n  return [...new Set(val).values()];\n}\n\nexport function generateWorkspacePackageJson(\n  workspaceName: WorkspaceName,\n  projects: WorkspaceProject[]\n): Record<string, unknown> {\n  const eslintRuntimes = uniq(projects.map(p => PROJECT_TYPE_TO_METADATA[p.type].eslint));\n  const tsconfigRuntimes = uniq(projects.map(p => PROJECT_TYPE_TO_METADATA[p.type].tsconfig));\n  const webpackRuntimes = uniq(projects.map(p => PROJECT_TYPE_TO_METADATA[p.type].webpack));\n\n  return {\n    name: workspaceName,\n    license: 'UNLICENSED',\n    type: 'module',\n    engines: {\n      node: '>=20.10',\n    },\n    scripts: {\n      setup: 'node ./setup.js',\n      deploy: 'node ./deploy.js',\n      build: 'NODE_ENV=production node ./build.js',\n      watch: 'NODE_ENV=development node ./build.js --watch',\n    },\n    eslintConfig: {\n      ignorePatterns: ['**/*.js'],\n    },\n    prettier: '@matthis/prettier-config',\n    devDependencies: Object.fromEntries(\n      (\n        [\n          ...eslintRuntimes.map(runtime => [\n            `@matthis/eslint-config-${runtime}`,\n            PACKAGE_VERSIONS.eslint,\n          ]),\n          ['@matthis/prettier-config', PACKAGE_VERSIONS.prettier],\n          ...tsconfigRuntimes.map(runtime => [\n            `@matthis/tsconfig-${runtime}`,\n            PACKAGE_VERSIONS.tsconfig,\n          ]),\n          ...webpackRuntimes.map(runtime => [\n            `@matthis/webpack-${runtime}`,\n            PACKAGE_VERSIONS.webpack,\n          ]),\n          ['@matthis/webpack-runner', PACKAGE_VERSIONS.runner],\n          ['typescript', TYPESCRIPT_VERSION],\n        ] as [string, string][]\n      ).sort((d1, d2) => d1[0].localeCompare(d2[0]))\n    ),\n  };\n}\n","export const PACKAGE_VERSIONS = {\n  project: '1.8.13',\n  eslint: '1.5.2',\n  prettier: '1.3.0',\n  tsconfig: '1.6.0',\n  webpack: '1.6.2',\n  runner: '1.5.6',\n};\n\nexport const ESLINT_VERSION = '8.56.x';\nexport const PRETTIER_VERSION = '3.1.x';\nexport const TYPESCRIPT_VERSION = '5.3.x';\n\nexport const LIB_VERSIONS = {\n  '@types/react': '18.2.x',\n  '@types/react-dom': '18.2.x',\n  react: '18.2.x',\n  'react-dom': '18.2.x',\n\n  'styled-components': '6.1.x',\n\n  'react-router': '6.4.x',\n  'react-router-dom': '6.4.x',\n};\n","import {ProjectType, WorkspaceName} from '@src/models';\nimport {WorkspaceProject} from '@src/project/generate_workspace';\nimport {generateCloudfrontDistributionTerraform} from '@src/project/terraform/cloudfront';\nimport {generateLambdaTerraform} from '@src/project/terraform/lambda';\nimport {generateAwsProviderTerraform} from '@src/project/terraform/provider';\nimport {generateS3BucketTerraform} from '@src/project/terraform/s3';\nimport {neverHappens} from '@src/type_utils';\n\nexport function generateCommonTerraform(\n  workspaceName: WorkspaceName,\n  projects: WorkspaceProject[]\n): string {\n  return [\n    generateAwsProviderTerraform(workspaceName),\n    generateS3BucketTerraform(\n      workspaceName,\n      projects.filter(p => p.type === ProjectType.Web).map(p => p.projectName)\n    ),\n  ].join('\\n\\n');\n}\n\nexport function generateWorkspaceProjectTerraform(\n  workspaceName: WorkspaceName,\n  project: WorkspaceProject\n): string | undefined {\n  const {projectName, type} = project;\n  if (type === ProjectType.Web) {\n    return generateCloudfrontDistributionTerraform(workspaceName, projectName);\n  } else if (type === ProjectType.LambdaFunction) {\n    return generateLambdaTerraform(workspaceName, projectName, {api: false});\n  } else if (type === ProjectType.LambdaApi) {\n    return generateLambdaTerraform(workspaceName, projectName, {api: true});\n  } else if (type === ProjectType.LambdaWebApi) {\n    return generateLambdaTerraform(workspaceName, projectName, {api: true});\n  } else if (type === ProjectType.NodeScript) {\n    return undefined;\n  } else if (type === ProjectType.SharedNode) {\n    return undefined;\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  } else if (type === ProjectType.Shared) {\n    return undefined;\n  }\n  neverHappens(type, 'ProjectType');\n}\n\nexport function generateDummyTerraformCredentials(): string {\n  return `\n[default]\naws_access_key_id=\naws_secret_access_key=\naws_session_token=\n`.trim();\n}\n","import {ProjectName, WorkspaceName} from '@src/models';\n\nexport function generateCloudfrontDistributionTerraform(\n  workspaceName: WorkspaceName,\n  projectName: ProjectName\n): string {\n  const bucketName = projectName.toLowerCase().replace(/[^\\d.a-z-]+/gu, '-');\n  const originId = `${bucketName}-origin-id`;\n  return `\noutput \"${projectName}_cloudfront_domain_name\" {\n  value       = aws_cloudfront_distribution.${projectName}.domain_name\n  description = \"Domain (from cloudfront) where the \\\\\"${workspaceName}-${projectName}\\\\\" frontend is available.\"\n}\n  \nresource \"aws_cloudfront_distribution\" \"${projectName}\" {\n  origin {\n    domain_name = aws_s3_bucket.code.bucket_regional_domain_name\n    origin_id   = \"${originId}\"\n    origin_path = \"/${projectName}\"\n\n    s3_origin_config {\n      origin_access_identity = aws_cloudfront_origin_access_identity.${projectName}.cloudfront_access_identity_path\n    }\n  }\n  \n  enabled             = true\n  wait_for_deployment = false\n  is_ipv6_enabled     = true\n  price_class         = \"PriceClass_100\"\n  \n  default_root_object   = \"/index.html\"\n  custom_error_response {\n    error_code         = 400\n    response_code      = 200\n    response_page_path = \"/index.html\"\n  }\n  custom_error_response {\n    error_code         = 403\n    response_code      = 200\n    response_page_path = \"/index.html\"\n  }\n  custom_error_response {\n    error_code         = 404\n    response_code      = 200\n    response_page_path = \"/index.html\"\n  }\n\n  default_cache_behavior {\n    allowed_methods  = [\"HEAD\", \"GET\"]\n    cached_methods   = [\"HEAD\", \"GET\"]\n    compress         = true\n    target_origin_id = \"${originId}\"\n    viewer_protocol_policy = \"redirect-to-https\"\n    \n    forwarded_values {\n      query_string = false\n      cookies {\n        forward = \"none\"\n      }\n    }\n  }\n\n  restrictions {\n    geo_restriction {\n      restriction_type = \"none\"\n    }\n  }\n\n  viewer_certificate {\n    cloudfront_default_certificate = true\n  }\n}\n\nresource \"aws_cloudfront_origin_access_identity\" \"${projectName}\" {}\n  `.trim();\n}\n","import {ProjectName, WorkspaceName} from '@src/models';\n\nexport function generateLambdaTerraform(\n  workspaceName: WorkspaceName,\n  projectName: ProjectName,\n  opts: {api: boolean}\n): string {\n  const {api} = opts;\n  return `\n# Define any extra role for the lambda here\ndata \"aws_iam_policy_document\" \"${projectName}_lambda_extra_role\" {\n  statement {\n    actions   = [\"s3:ListAllMyBuckets\"]\n    resources = [\"*\"]\n  }\n}\n\nresource \"aws_s3_object\" \"${projectName}_archive\" {\n  bucket       = aws_s3_bucket.code.id\n  key          = \"${projectName}/dist.zip\"\n  content_base64 = \"UEsDBBQACAAIAGaKwlYAAAAAAAAAADYAAAAIACAAaW5kZXguanNVVA0AB3AIemRyCHpkcAh6ZHV4CwABBPUBAAAEFAAAAEutKMgvKinWy0jMS8lJLVKwVUgsrsxLVkgrzUsuyczPU9DQVKjmUlAoSi0pLcpTUFe35qq15gIAUEsHCP0ak1o4AAAANgAAAFBLAQIUAxQACAAIAGaKwlb9GpNaOAAAADYAAAAIACAAAAAAAAAAAACkgQAAAABpbmRleC5qc1VUDQAHcAh6ZHIIemRwCHpkdXgLAAEE9QEAAAQUAAAAUEsFBgAAAAABAAEAVgAAAI4AAAAAAA==\"\n}\n\nresource \"aws_lambda_function\" \"${projectName}\" {\n  function_name     = \"${workspaceName}-${projectName}\"\n  s3_bucket         = aws_s3_object.${projectName}_archive.bucket\n  s3_key            = aws_s3_object.${projectName}_archive.key\n  handler           = \"index.handler\"\n  runtime           = \"nodejs20.x\"\n  role              = aws_iam_role.${projectName}_lambda_exec.arn\n  timeout           = 900 // 15 minutes\n  environment {\n    variables = {\n      NODE_OPTIONS = \"--enable-source-maps\"\n    }\n  }\n}\n\noutput \"${projectName}_function_name\" {\n  value       = aws_lambda_function.${projectName}.function_name\n  description = \"Function name of the \\\\\"${workspaceName}-${projectName}\\\\\" lambda\"\n}\n\n${\n  api\n    ? `\nresource \"aws_lambda_function_url\" \"${projectName}\" {\n  function_name      = aws_lambda_function.${projectName}.function_name\n  authorization_type = \"NONE\"\n}\n\noutput \"${projectName}_function_url\" {\n  value       = aws_lambda_function_url.${projectName}.function_url\n  description = \"Function url of the \\\\\"${workspaceName}-${projectName}\\\\\" lambda\"\n}\n`.trim()\n    : ''\n}\n\nresource \"aws_iam_role\" \"${projectName}_lambda_exec\" {\n  name = \"${workspaceName}-${projectName}-assume-role\"\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action    = \"sts:AssumeRole\"\n        Principal = {\n          Service = \"lambda.amazonaws.com\"\n        }\n        Effect    = \"Allow\"\n        Sid       = \"\"\n      },\n    ]\n  })\n\n  inline_policy {\n    name = \"${workspaceName}-${projectName}-cloudwatch-role\"\n    policy = jsonencode({\n      Version = \"2012-10-17\"\n      Statement = [\n        {\n          Action   = [\n            \"logs:CreateLogGroup\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\"\n          ]\n          Effect   = \"Allow\"\n          Resource = \"arn:aws:logs:*:*:*\"\n        },\n      ]\n    })\n  }\n\n  inline_policy {\n    name = \"${workspaceName}-${projectName}-s3-code-bucket\"\n    policy = jsonencode({\n      Version = \"2012-10-17\"\n      Statement = [\n        {\n          Action   = [\n            \"s3:GetObject\",\n            \"s3:GetObjectTagging\"\n          ]\n          Effect   = \"Allow\"\n          Resource = [\n            \"\\${aws_s3_bucket.code.arn}/*\",\n          ]\n        }\n      ]\n    })\n  }\n  \n  inline_policy {\n    name = \"${workspaceName}-${projectName}-extra-role\"\n    policy = data.aws_iam_policy_document.${projectName}_lambda_extra_role.json\n  }\n}\n`.trim();\n}\n","import {WorkspaceName} from '@src/models';\n\nexport function generateAwsProviderTerraform(workspaceName: WorkspaceName): string {\n  return `\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~> 5.1\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region  = \"eu-west-3\"\n  shared_credentials_files = [\"./.aws-credentials\"]\n  default_tags {\n    tags = {\n      Project = \"${workspaceName}\"\n    }\n  }\n}\n\ndata \"aws_region\" \"current\" {}\noutput \"region\" {\n  value = data.aws_region.current.id\n}\n`.trim();\n}\n","import {ProjectName, WorkspaceName} from '@src/models';\n\nexport function generateS3BucketTerraform(\n  workspaceName: WorkspaceName,\n  webProjectNames: ProjectName[]\n): string {\n  const bucketName = workspaceName.toLowerCase().replace(/[^a-z0-9.-]+/gu, '-');\n\n  const CODE_BUCKET = `\nresource \"aws_s3_bucket\" \"code\" {\n  bucket_prefix = \"${bucketName}-code-\"\n}\n\noutput \"code_bucket\" {\n  value = aws_s3_bucket.code.id\n}\n`.trim();\n\n  const CLOUDFRONT_ACCESS = `\ndata \"aws_iam_policy_document\" \"cloudfront_access_to_code\" {\n  ${webProjectNames\n    .map(p =>\n      `\n  statement {\n    actions   = [\"s3:GetObject\"]\n    resources = [\n      \"\\${aws_s3_bucket.code.arn}/${p}/*\",\n    ]\n    principals {\n      type        = \"AWS\"\n      identifiers = [aws_cloudfront_origin_access_identity.${p}.iam_arn]\n    }\n  }\n`.trim()\n    )\n    .join('\\n\\n')}\n}\n\nresource \"aws_s3_bucket_policy\" \"code\" {\n  bucket = aws_s3_bucket.code.id\n  policy = data.aws_iam_policy_document.cloudfront_access_to_code.json\n}\n`.trim();\n\n  const out = [CODE_BUCKET];\n  if (webProjectNames.length > 0) {\n    out.push(CLOUDFRONT_ACCESS);\n  }\n  return out.join('\\n\\n');\n}\n","export type Brand<Type, Name> = Type & {__brand: Name};\n\nexport function neverHappens(value: never, msg?: string): never {\n  throw new Error(msg ?? `Unexpected value ${value}`);\n}\n\nfunction notUndefined<T>(val: T | undefined): val is T {\n  return val !== undefined;\n}\n\nexport function removeUndefined<T>(arr: (T | undefined)[]): T[] {\n  return arr.filter(notUndefined);\n}\n","export function generateDynamoTerraform(): string {\n  return `output \"dummy_table_name\" {\n  value       = aws_dynamodb_table.dummy_table.name\n}\n\noutput \"dummy_index_name\" {\n  value = {\n    for obj in aws_dynamodb_table.dummy_table.global_secondary_index : \"\\${aws_dynamodb_table.dummy_table.name }_By_\\${obj.hash_key}\\${ length(obj.range_key) > 0 ? '_Sorted_By_\\${obj.range_key}' : '' }\" => obj.name\n  }\n}\n\nresource \"aws_dynamodb_table\" \"dummy_table\" {\n  name           = \"Dummy\"\n  billing_mode   = \"PAY_PER_REQUEST\"\n  hash_key       = \"id\"\n\n  attribute {\n    name = \"id\"\n    type = \"S\"\n  }\n\n  attribute {\n    name = \"group\"\n    type = \"S\"\n  }\n\n  attribute {\n    name = \"ts\"\n    type = \"N\"\n  }\n\n  global_secondary_index {\n    name               = \"Dummy_ByGroup_SortedByTs\"\n    hash_key           = \"group\"\n    range_key          = \"ts\"\n    projection_type    = \"ALL\"\n  }\n\n  global_secondary_index {\n    name               = \"Dummy_ByTs\"\n    hash_key           = \"ts\"\n    projection_type    = \"ALL\"\n  }\n}`\n    .trim()\n    .split('\\n')\n    .map(l => `# ${l}`)\n    .join('\\n');\n}\n","import {join} from 'node:path';\n\nimport {maybeReadFile} from '@src/fs';\nimport {WorkspaceFragment} from '@src/models';\nimport {getProjectsFromWorkspaceFragment} from '@src/project/generate_workspace';\n\nexport function generateCodeWorkspace(\n  workspaceName: string,\n  workspaceFragments: WorkspaceFragment[]\n): Record<string, unknown> {\n  const projects = workspaceFragments.flatMap(f =>\n    getProjectsFromWorkspaceFragment(f, workspaceFragments)\n  );\n  const projectNames = projects.map(p => p.projectName);\n  return {\n    projects: workspaceFragments,\n    folders: [\n      ...projectNames.map(p => ({path: p})),\n      {path: 'terraform'},\n      {path: '.', name: 'root'},\n    ],\n    settings: {\n      'window.title': `${workspaceName}\\${separator}\\${activeEditorShort}`,\n      'files.exclude': Object.fromEntries([\n        ...projectNames.map(p => [p, true]),\n        ['terraform', true],\n      ]),\n      'editor.acceptSuggestionOnCommitCharacter': false,\n      'editor.suggestSelection': 'first',\n      'vsintellicode.modify.editor.suggestSelection': 'automaticallyOverrodeDefaultValue',\n      'explorer.confirmDelete': false,\n      'git.autofetch': true,\n      'git.confirmSync': false,\n      'typescript.preferences.importModuleSpecifier': 'non-relative',\n      'eslint.lintTask.enable': true,\n      'eslint.useESLintClass': true,\n      'eslint.options': {\n        reportUnusedDisableDirectives: 'warn',\n      },\n      'editor.formatOnSave': true,\n      'editor.codeActionsOnSave': {\n        'source.fixAll': false,\n        'source.fixAll.eslint': true,\n      },\n      'editor.defaultFormatter': 'esbenp.prettier-vscode',\n      'editor.linkedEditing': true,\n      'emmet.showExpandedAbbreviation': 'never',\n      'files.associations': {\n        '*.tf': 'terraform',\n      },\n    },\n    extensions: {\n      recommendations: [\n        'dbaeumer.vscode-eslint',\n        'esbenp.prettier-vscode',\n        'VisualStudioExptTeam.vscodeintellicode',\n        'styled-components.vscode-styled-components',\n        'naumovs.color-highlight',\n        'eamodio.gitlens',\n      ],\n    },\n  };\n}\n\nexport async function readWorkspaceFragments(\n  workspacePath: string\n): Promise<WorkspaceFragment[] | undefined> {\n  const workspaceContent = await maybeReadFile(join(workspacePath, 'app.code-workspace'));\n  const workspaceJson = workspaceContent === undefined ? {} : JSON.parse(workspaceContent);\n  const workspaceProjects = Array.isArray(workspaceJson.projects)\n    ? workspaceJson.projects\n    : undefined;\n  return workspaceProjects as WorkspaceFragment[] | undefined;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {mkdir} from 'node:fs/promises';\nimport {basename, join} from 'node:path';\n\nimport {prompt} from 'prompts';\n\nimport {rmDir} from '@src/fs';\nimport {ProjectName, WorkspaceFragment, WorkspaceFragmentType, WorkspaceName} from '@src/models';\nimport {generateWorkspace, getProjectsFromWorkspaceFragment} from '@src/project/generate_workspace';\nimport {readWorkspaceFragments} from '@src/project/vscode_workspace';\nimport {neverHappens} from '@src/type_utils';\n\nasync function cancel(workspacePath?: string): Promise<never> {\n  console.log('Cancelling...');\n  if (workspacePath !== undefined) {\n    await rmDir(workspacePath);\n  }\n  // eslint-disable-next-line node/no-process-exit\n  process.exit(0);\n}\n\nasync function initProject(): Promise<void> {\n  let workspaceName: string;\n  let workspacePath = process.cwd();\n  const frags: WorkspaceFragment[] = [];\n  const takenNames = ['terraform'];\n  const alreadyGenerated: ProjectName[] = [];\n\n  // Check if we are already in a workspace\n  const workspaceFragments = await readWorkspaceFragments(workspacePath);\n  if (workspaceFragments !== undefined) {\n    workspaceName = basename(workspacePath);\n    for (const fragment of workspaceFragments) {\n      frags.push(fragment);\n      const projectNames = getProjectsFromWorkspaceFragment(fragment, workspaceFragments).map(\n        p => p.projectName\n      );\n      takenNames.push(...projectNames);\n      alreadyGenerated.push(...projectNames);\n    }\n  } else {\n    frags.push({type: WorkspaceFragmentType.Shared}, {type: WorkspaceFragmentType.SharedNode});\n    // Ask for workspace name\n    const {workspaceName: newWorkspaceName} = await prompt({\n      type: 'text',\n      name: 'workspaceName',\n      message: 'Workspace name',\n      validate: (v: string) => v.length > 0,\n    });\n    workspaceName = newWorkspaceName;\n\n    if (typeof workspaceName !== 'string') {\n      return cancel();\n    }\n\n    workspacePath = join(workspacePath, workspaceName);\n    await mkdir(workspacePath);\n  }\n\n  try {\n    while (true) {\n      let frag;\n      try {\n        frag = await askForWorkspaceFragment(takenNames);\n      } catch (err: unknown) {\n        console.error(String(err));\n        continue;\n      }\n      if (frag) {\n        frags.push(frag);\n        takenNames.push(...getProjectsFromWorkspaceFragment(frag, frags).map(p => p.projectName));\n      } else {\n        break;\n      }\n    }\n\n    const name = workspaceName as WorkspaceName;\n\n    await generateWorkspace(workspacePath, name, frags, alreadyGenerated);\n  } catch (err: unknown) {\n    console.error(String(err));\n    await cancel(workspaceName);\n  }\n}\n\ntype SelectableWorkspaceFragmentType = Exclude<\n  WorkspaceFragmentType,\n  WorkspaceFragmentType.Shared | WorkspaceFragmentType.SharedNode\n>;\n\nconst WorkspaceFragmentTypeToString: Record<SelectableWorkspaceFragmentType, string> = {\n  [WorkspaceFragmentType.WebApp]: 'Web App',\n  [WorkspaceFragmentType.StaticWebsite]: 'Static Website',\n  [WorkspaceFragmentType.StandaloneLambda]: 'Standalone Lambda',\n  [WorkspaceFragmentType.ApiLambda]: 'API Lambda',\n  [WorkspaceFragmentType.NodeScript]: 'Node Script',\n};\n\nasync function askForWorkspaceFragment(\n  takenNames: string[]\n): Promise<WorkspaceFragment | undefined> {\n  const DONE_GENERATING = 'done_generating';\n  const {workspaceFragmentType} = await prompt({\n    type: 'select',\n    name: 'workspaceFragmentType',\n    message: 'Choose a type of project to add to the workspace',\n    choices: [\n      ...Object.entries(WorkspaceFragmentTypeToString).map(([value, title]) => ({value, title})),\n      {title: `I'm done`, value: DONE_GENERATING},\n    ],\n  });\n  if (workspaceFragmentType === undefined || workspaceFragmentType === DONE_GENERATING) {\n    return undefined;\n  }\n  const type = workspaceFragmentType as SelectableWorkspaceFragmentType;\n\n  if (type === WorkspaceFragmentType.StaticWebsite) {\n    const websiteName = await askForProjectName('Website project name', 'website', takenNames);\n    return {type, websiteName};\n  } else if (type === WorkspaceFragmentType.StandaloneLambda) {\n    const lambdaName = await askForProjectName('Lambda project name', 'lambda', takenNames);\n    return {type, lambdaName};\n  } else if (type === WorkspaceFragmentType.ApiLambda) {\n    const lambdaName = await askForProjectName('Lambda project name', 'lambda', takenNames);\n    return {type, lambdaName};\n  } else if (type === WorkspaceFragmentType.WebApp) {\n    const websiteName = await askForProjectName('Frontend project name', 'frontend', takenNames);\n    const lambdaName = await askForProjectName('Backend project name', 'backend', takenNames);\n    return {type, websiteName, lambdaName};\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  } else if (type === WorkspaceFragmentType.NodeScript) {\n    const scriptName = await askForProjectName('Script project name', 'script', takenNames);\n    return {type, scriptName};\n  }\n  neverHappens(type, `Unknown WorkspaceFragmentType \"${type}\"`);\n}\n\nconst VALID_PROJECT_NAME = /^[a-zA-Z0-9_]+$/u;\n\nasync function askForProjectName(\n  question: string,\n  defaultValue: string,\n  takenNames: string[]\n): Promise<ProjectName> {\n  let initial = defaultValue;\n  if (takenNames.includes(initial)) {\n    let index = 2;\n    while (takenNames.includes(initial)) {\n      initial = `${defaultValue}_${index}`;\n      index++;\n    }\n  }\n\n  const {value} = await prompt({\n    type: 'text',\n    name: 'value',\n    message: question,\n    initial,\n    validate: (v: string) => v.length > 0,\n  });\n  if (typeof value !== 'string') {\n    throw new Error(`${question} is required`);\n  }\n  if (!VALID_PROJECT_NAME.test(value)) {\n    throw new Error(`Invalid project name \"${value}\". Allowed characters are a-z, A-Z, 0-9 and _`);\n  }\n  if (takenNames.includes(value)) {\n    throw new Error(`${value} is taken`);\n  }\n  return value as ProjectName;\n}\n\ninitProject().catch(console.error);\n"],"names":["exec","promises","dirname","join","format","access","readFile","readdir","stat","writeFile","mkdir","rm","writeJsonFile","path","json","writeRawFile","JSON","stringify","undefined","prettierConfig","parser","printWidth","singleQuote","trailingComma","bracketSpacing","arrowParens","endOfLine","prettierFormat","str","writePrettyFile","code","writeJsFile","js","writeTsFile","ts","content","recursive","writeRawFileIfNotExists","exists","rmDir","dirPath","force","cleanDir","cp","from","to","Promise","resolve","reject","err","maybeReadFile","fileContent","toString","listFiles","files","ents","withFileTypes","ent","entPath","name","isDirectory","push","then","subFiles","isFile","all","ProjectType","EslintType","TsConfigType","WebpackType","PROJECT_TYPE_TO_METADATA","Web","eslint","tsconfig","webpack","LambdaFunction","Node","Lambda","LambdaApi","LambdaWebApi","NodeScript","Shared","Lib","SharedNode","WorkspaceFragmentType","validateRegistry","execSync","relative","fileURLToPath","generateProject","generateGitIgnore","generateWorkspacePackageJson","generateCommonTerraform","generateDummyTerraformCredentials","generateWorkspaceProjectTerraform","generateDynamoTerraform","generateCodeWorkspace","neverHappens","TEMPLATES_PATH","import","meta","url","getProjectsFromWorkspaceFragment","fragment","allFragments","type","StaticWebsite","projectName","websiteName","vars","__PROJECT_NAME__","StandaloneLambda","lambdaName","ApiLambda","__BACKEND_NAME__","__BACKEND_NAME_UPPERCASE__","toUpperCase","WebApp","__FRONTEND_NAME__","__FRONTEND_NAME_UPPERCASE__","scriptName","otherVars","f","generateWorkspace","dst","workspaceName","workspaceFragments","alreadyGenerated","projects","flatMap","filter","p","includes","map","project","SCRIPTS_PATH","terraformPath","console","log","commands","stdio","process","cwd","packageJsonPath","packageJsonbuffer","packageJson","parse","file","buffer","newContent","varName","varValue","Object","entries","replaceAll","endsWith","trim","PACKAGE_VERSIONS","TYPESCRIPT_VERSION","uniq","val","Set","values","eslintRuntimes","tsconfigRuntimes","webpackRuntimes","license","engines","node","scripts","setup","deploy","build","watch","eslintConfig","ignorePatterns","prettier","devDependencies","fromEntries","runtime","runner","sort","d1","d2","localeCompare","ESLINT_VERSION","PRETTIER_VERSION","LIB_VERSIONS","react","generateCloudfrontDistributionTerraform","generateLambdaTerraform","generateAwsProviderTerraform","generateS3BucketTerraform","api","bucketName","toLowerCase","replace","originId","opts","webProjectNames","CODE_BUCKET","CLOUDFRONT_ACCESS","out","length","value","msg","Error","notUndefined","removeUndefined","arr","split","l","projectNames","folders","settings","reportUnusedDisableDirectives","extensions","recommendations","readWorkspaceFragments","workspacePath","workspaceContent","workspaceJson","workspaceProjects","Array","isArray","basename","prompt","cancel","exit","initProject","frags","takenNames","newWorkspaceName","message","validate","v","frag","askForWorkspaceFragment","error","String","WorkspaceFragmentTypeToString","DONE_GENERATING","workspaceFragmentType","choices","title","askForProjectName","VALID_PROJECT_NAME","question","defaultValue","initial","index","test","catch"],"sourceRoot":""}