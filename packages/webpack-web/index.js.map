{"version":3,"file":"index.js","mappings":"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","sources":["webpack://b/webpack/bootstrap","webpack://b/webpack/runtime/compat get default export","webpack://b/webpack/runtime/define property getters","webpack://b/webpack/runtime/hasOwnProperty shorthand","webpack://b/webpack/runtime/make namespace object","webpack://b/external node-commonjs \"node:fs\"","webpack://b/external node-commonjs \"node:path\"","webpack://b/external node-commonjs \"webpack\"","webpack://b/external node-commonjs \"chokidar\"","webpack://b/external node-commonjs \"eslint\"","webpack://b/./src/webpack/plugins/formatter.ts","webpack://b/./src/logger.ts","webpack://b/./src/global_error.ts","webpack://b/./src/exit_handler.ts","webpack://b/./src/webpack/plugins/standalone_plugin.ts","webpack://b/./src/webpack/plugins/eslint_plugin.ts","webpack://b/external node-commonjs \"fork-ts-checker-webpack-plugin\"","webpack://b/./src/webpack/plugins/fork_ts_checker_plugin.ts","webpack://b/external node-commonjs \"terser-webpack-plugin\"","webpack://b/external node-commonjs \"node:child_process\"","webpack://b/./src/webpack/plugins/yarn_plugin.ts","webpack://b/external node-commonjs \"@babel/core\"","webpack://b/external node-commonjs \"@babel/preset-env\"","webpack://b/external node-commonjs \"@babel/preset-typescript\"","webpack://b/external node-commonjs \"babel-loader\"","webpack://b/external node-commonjs \"@babel/preset-react\"","webpack://b/external node-commonjs \"babel-plugin-styled-components\"","webpack://b/./src/versions.ts","webpack://b/external node-commonjs \"source-map-loader\"","webpack://b/external node-commonjs \"favicons-webpack-plugin\"","webpack://b/external node-commonjs \"prettier\"","webpack://b/./src/fs.ts","webpack://b/./src/type_utils.ts","webpack://b/./src/webpack/plugins/favicons_webpack_plugin.ts","webpack://b/external node-commonjs \"html-webpack-plugin\"","webpack://b/./src/webpack/plugins/html_plugin.ts","webpack://b/./src/webpack/common-configs/web_config.ts","webpack://b/./src/webpack/common-configs/base_config.ts","webpack://b/./src/webpack/plugins/define_plugin.ts","webpack://b/./src/webpack/plugins/terser_plugin.ts","webpack://b/./src/webpack/loaders/babel_loader_web.ts","webpack://b/./src/webpack/loaders/source_map_loader.ts","webpack://b/./src/webpack/loaders/images_loader.ts","webpack://b/./src/webpack/configs/web.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:path\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"webpack\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"chokidar\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"eslint\");","const ansiRegex = new RegExp(\n  [\n    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n    '(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))',\n  ].join('|'),\n  'gu'\n);\nexport const stripAnsi = (s: string): string => s.replace(ansiRegex, '');\n","export const error: (message?: unknown, ...optionalParams: unknown[]) => void = console.error;\nexport const log: (message?: unknown, ...optionalParams: unknown[]) => void = console.log;\n","import {appendFileSync} from 'node:fs';\n\nimport {error} from '@src/logger';\n\nexport function globalError(...val: unknown[]): void {\n  for (const data of val) {\n    try {\n      const str =\n        typeof data === 'string'\n          ? data\n          : data instanceof Error\n            ? (data.stack ?? String(data))\n            : JSON.stringify(data);\n      error(str);\n      appendFileSync('error.log', str);\n    } catch {\n      // Don't log anything that went wrong during logging to prevent infinite loops\n    }\n  }\n}\n","import {globalError} from '@src/global_error';\n\nlet called = false;\nconst callbacks: (() => void | Promise<void>)[] = [];\n\nfunction runCallbacks(): void {\n  if (called) {\n    return;\n  }\n  called = true;\n  for (const fn of callbacks) {\n    Promise.resolve(fn()).catch((err: unknown) =>\n      globalError('Failure to run exit cleanup callback', err)\n    );\n  }\n}\n\nprocess.on('beforeExit', () => runCallbacks());\nprocess.on('exit', () => runCallbacks());\nprocess.on('SIGTERM', () => runCallbacks());\nprocess.on('SIGINT', () => runCallbacks());\nprocess.on('uncaughtException', err => {\n  globalError('uncaughtException', err);\n  runCallbacks();\n});\n\nexport function registerExitCallback(cb: () => void | Promise<void>): void {\n  callbacks.push(cb);\n}\n","import {Compiler} from 'webpack';\n\nimport {registerExitCallback} from '@src/exit_handler';\nimport {globalError} from '@src/global_error';\n\nexport abstract class StandalonePlugin {\n  protected abstract name: string;\n  protected context: string = process.cwd();\n\n  // INITIALIZE\n\n  public apply(compiler: Compiler): void {\n    this.context = compiler.context;\n    compiler.hooks.beforeRun.tapPromise(this.name, async () => await this.setupHandler(compiler));\n    compiler.hooks.watchRun.tapPromise(this.name, async () => await this.setupHandler(compiler));\n    compiler.hooks.shutdown.tapPromise(\n      this.name,\n      async () => await this.exitHandlerAsync(compiler)\n    );\n    registerExitCallback(() => this.exitHandler(compiler));\n  }\n\n  protected abstract setup(compiler: Compiler): void | Promise<void>;\n  protected abstract teardown(compiler: Compiler): void | Promise<void>;\n\n  // SETUP\n\n  private hasStarted = false;\n  private async setupHandler(compiler: Compiler): Promise<void> {\n    if (this.hasStarted) {\n      return;\n    }\n    this.hasStarted = true;\n    await this.setup(compiler);\n  }\n\n  // EXIT\n\n  private hasExited = false;\n  private exitHandler(compiler: Compiler): void {\n    if (this.hasExited) {\n      return;\n    }\n    this.hasExited = true;\n    Promise.resolve(this.teardown(compiler)).catch((err: unknown) => {\n      globalError(`Error during teardown of plugin ${this.name}`, err);\n    });\n  }\n  private async exitHandlerAsync(compiler: Compiler): Promise<void> {\n    if (this.hasExited) {\n      return;\n    }\n    this.hasExited = true;\n    await this.teardown(compiler);\n  }\n}\n","import {existsSync, readdirSync} from 'node:fs';\nimport {join} from 'node:path';\n\nimport {FSWatcher, watch} from 'chokidar';\n// eslint-disable-next-line n/no-extraneous-import\nimport {ESLint, Linter} from 'eslint';\nimport {Compilation, Compiler, WebpackError} from 'webpack';\n\nimport {WebpackPlugin} from '@src/webpack/models';\nimport {stripAnsi} from '@src/webpack/plugins/formatter';\nimport {StandalonePlugin} from '@src/webpack/plugins/standalone_plugin';\n\ninterface QueuedFileState {\n  status: 'queued';\n}\n\ninterface InProgressFileState {\n  status: 'in-progress';\n  eslintRunId: number;\n}\n\ninterface SuccessFileState {\n  status: 'success';\n  eslintRunId: number;\n}\n\ninterface FailureFileState {\n  status: 'failed';\n  eslintRunId: number;\n  messages: Linter.LintMessage[];\n}\n\ninterface ErroredFileState {\n  status: 'errored';\n  eslintRunId: number;\n  err: unknown;\n}\n\ntype FileState =\n  | QueuedFileState\n  | InProgressFileState\n  | SuccessFileState\n  | FailureFileState\n  | ErroredFileState;\n\nexport class EslintWebpackError extends WebpackError {\n  public override name = 'EslintWebpackError';\n  public constructor(\n    public readonly eslintRunId: number,\n    message: string,\n    filePath?: string,\n    loc?: WebpackError['loc'],\n    public readonly ruleId?: string\n  ) {\n    super(message);\n    if (filePath !== undefined) {\n      this.file = filePath;\n    }\n    if (loc) {\n      this.loc = loc;\n    }\n  }\n}\n\nconst RUN_ESLINT_INTERVAL = 500;\n\nclass EslintPlugin extends StandalonePlugin {\n  protected name = 'EslintPlugin';\n  private watcher: FSWatcher | undefined;\n  private runEslintInterval: NodeJS.Timeout | undefined;\n  private readonly fileStates = new Map<string, FileState>();\n  private compilation: Compilation | undefined;\n  private resolveAwaitIdlePromise: (() => void) | undefined;\n  private shouldRun = false;\n\n  protected async setup(compiler: Compiler): Promise<void> {\n    return await new Promise<void>(resolve => {\n      this.runEslintInterval = setInterval(() => this.runEslint(), RUN_ESLINT_INTERVAL);\n\n      // Generate the patterns of all the files across the workspace\n      const projectPath = this.context;\n      const workspacePath = join(projectPath, '..');\n      const workspaceDirs = readdirSync(workspacePath, {withFileTypes: true})\n        .filter(e => e.isDirectory() && existsSync(join(workspacePath, e.name, 'package.json')))\n        .map(e => join(workspacePath, e.name));\n      const patterns = ['src/**/*.ts', 'src/**/*.tsx'].flatMap(pattern =>\n        workspaceDirs.map(dir => join(dir, pattern))\n      );\n\n      this.watcher = watch(patterns);\n      this.watcher\n        .on('add', path => {\n          this.shouldRun = true;\n          if (path.startsWith(`${projectPath}/`)) {\n            this.fileStates.set(path, {status: 'queued'});\n          }\n        })\n        .on('change', path => {\n          this.shouldRun = true;\n          if (path.startsWith(`${projectPath}/`)) {\n            this.fileStates.set(path, {status: 'queued'});\n          }\n        })\n        .on('unlink', path => {\n          this.shouldRun = true;\n          if (path.startsWith(`${projectPath}/`)) {\n            this.fileStates.delete(path);\n          }\n        })\n        .on('ready', () => {\n          this.runEslint();\n          resolve();\n        });\n      compiler.hooks.compilation.tap(this.name, comp => {\n        this.compilation = comp;\n        this.syncErrorsAndWarnings();\n      });\n      compiler.hooks.afterCompile.tapAsync(this.name, (compilation, cb) => {\n        setTimeout(() => {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          this.awaitIdle().finally(cb);\n        }, RUN_ESLINT_INTERVAL);\n      });\n    });\n  }\n\n  private runEslint(): void {\n    if (!this.shouldRun) {\n      return;\n    }\n    this.shouldRun = false;\n    const filesQueued = [...this.fileStates.entries()];\n    if (filesQueued.length === 0) {\n      return;\n    }\n\n    const eslintRunId = Math.random();\n    for (const [filePath] of filesQueued) {\n      this.fileStates.set(filePath, {status: 'in-progress', eslintRunId});\n    }\n\n    const handleError = (err: unknown): void => {\n      for (const [filePath] of filesQueued) {\n        const currentState = this.fileStates.get(filePath);\n        if (\n          !currentState ||\n          currentState.status !== 'in-progress' ||\n          currentState.eslintRunId !== eslintRunId\n        ) {\n          continue;\n        }\n        this.fileStates.set(filePath, {status: 'errored', eslintRunId, err});\n      }\n    };\n\n    try {\n      const tsConfigPath = join(this.context, 'tsconfig.json');\n      const eslint = new ESLint({\n        cwd: this.context,\n        overrideConfig: {\n          settings: {\n            'import/resolver': {\n              typescript: {\n                project: tsConfigPath,\n              },\n            },\n          },\n          languageOptions: {\n            parserOptions: {\n              project: tsConfigPath,\n            },\n          },\n        },\n      });\n      eslint\n        .lintFiles(filesQueued.map(e => e[0]))\n        .then(results => {\n          for (const result of results) {\n            const currentState = this.fileStates.get(result.filePath);\n            if (\n              !currentState ||\n              currentState.status !== 'in-progress' ||\n              currentState.eslintRunId !== eslintRunId\n            ) {\n              continue;\n            }\n            if (result.messages.length > 0) {\n              this.fileStates.set(result.filePath, {\n                status: 'failed',\n                eslintRunId,\n                messages: result.messages,\n              });\n            } else {\n              this.fileStates.set(result.filePath, {status: 'success', eslintRunId});\n            }\n          }\n        })\n        .catch(handleError)\n        .finally(() => {\n          this.syncErrorsAndWarnings();\n          this.checkIdle();\n        });\n    } catch (err: unknown) {\n      handleError(err);\n      this.syncErrorsAndWarnings();\n      this.checkIdle();\n    }\n  }\n\n  private syncErrorsAndWarnings(): void {\n    if (!this.compilation) {\n      return;\n    }\n\n    // Errors\n    let eslintError: EslintWebpackError | undefined;\n    for (const fileState of this.fileStates.values()) {\n      if (fileState.status === 'errored') {\n        eslintError = new EslintWebpackError(\n          fileState.eslintRunId,\n          `Failure to run ESLint:\\n${\n            fileState.err instanceof Error ? fileState.err.stack : String(fileState.err)\n          }`\n        );\n      }\n    }\n    this.compilation.errors = [\n      ...(this.compilation.errors as (EslintWebpackError | WebpackError)[]).filter(\n        w => !('eslintRunId' in w)\n      ),\n      ...(eslintError ? [eslintError] : []),\n    ];\n\n    // Warnings\n    this.compilation.warnings = [\n      ...(this.compilation.warnings as (EslintWebpackError | WebpackError)[]).filter(\n        w => !('eslintRunId' in w)\n      ),\n      ...[...this.fileStates.entries()]\n        .sort((e1, e2) => e1[0].localeCompare(e2[0]))\n        .flatMap(([filePath, fileState]) => {\n          if (fileState.status !== 'failed') {\n            return [];\n          }\n          return fileState.messages.map(\n            msg =>\n              new EslintWebpackError(\n                fileState.eslintRunId,\n                stripAnsi(msg.message),\n                filePath,\n                {\n                  start: {line: msg.line, column: msg.column},\n                  end:\n                    msg.endLine === undefined\n                      ? undefined\n                      : {line: msg.endLine, column: msg.endColumn},\n                },\n                msg.ruleId ?? undefined\n              )\n          );\n        }),\n    ];\n  }\n\n  private checkIdle(): void {\n    if (!this.resolveAwaitIdlePromise) {\n      return;\n    }\n    for (const state of this.fileStates.values()) {\n      if (state.status === 'queued' || state.status === 'in-progress') {\n        return;\n      }\n    }\n    this.resolveAwaitIdlePromise();\n  }\n\n  private async awaitIdle(): Promise<void> {\n    return await new Promise<void>(resolve => {\n      this.resolveAwaitIdlePromise = resolve;\n      this.checkIdle();\n    });\n  }\n\n  protected async teardown(): Promise<void> {\n    clearInterval(this.runEslintInterval);\n    await this.watcher?.close();\n  }\n}\n\nexport function eslintPlugin(): WebpackPlugin {\n  return new EslintPlugin();\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fork-ts-checker-webpack-plugin\");","import {join} from 'node:path';\n\nimport ForkTsCheckerWebpackPlugin from 'fork-ts-checker-webpack-plugin';\n\nimport {WebpackPlugin} from '@src/webpack/models';\n\nexport function forkTsCheckerPlugin(context: string): WebpackPlugin {\n  return new ForkTsCheckerWebpackPlugin({\n    typescript: {\n      diagnosticOptions: {\n        syntactic: true,\n        semantic: true,\n        declaration: false,\n        global: true,\n      },\n      mode: 'readonly',\n      configFile: join(context, 'tsconfig.json'),\n    },\n    formatter: 'basic',\n    logger: {log: () => {}, error: () => {}},\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"terser-webpack-plugin\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:child_process\");","import {exec} from 'node:child_process';\nimport {appendFileSync} from 'node:fs';\nimport {join} from 'node:path';\n\nimport {Compiler} from 'webpack';\n\nimport {error} from '@src/logger';\n\nexport class YarnPlugin {\n  public apply(compiler: Compiler): void {\n    compiler.hooks.beforeRun.tapAsync('YarnPlugin', (compiler, cb) => {\n      const command = [\n        'yarn',\n        'install',\n        '--audit',\n        '--check-files',\n        '--non-interactive',\n        '--production=false',\n      ].join(' ');\n      exec(command, {cwd: compiler.context}, (err, stdout, stderr) => {\n        if (err) {\n          error(`Yarn failed in ${compiler.context}`);\n          cb(err);\n          return;\n        }\n        const warnings = stderr.split('\\n').filter(l => l.trim().length > 0);\n        if (warnings.length > 0) {\n          appendFileSync(join(compiler.context, `.yarn-warnings.log`), stderr);\n        }\n        cb();\n      });\n    });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"@babel/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"@babel/preset-env\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"@babel/preset-typescript\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"babel-loader\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"@babel/preset-react\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"babel-plugin-styled-components\");","export const PACKAGE_VERSIONS = {\n  project: '1.12.23',\n  eslint: '1.8.5',\n  prettier: '1.5.0',\n  tsconfig: '1.7.4',\n  webpack: '1.8.9',\n  runner: '1.6.20',\n  lambdaServerRuntime: '1.0.7',\n};\n\nexport const ESLINT_VERSION = '9.8.x';\nexport const PRETTIER_VERSION = '3.3.3';\nexport const TYPESCRIPT_VERSION = '5.5.x';\nexport const MIN_NODE_VERSION = '20.10';\nexport const NODE_VERSION = `>=${MIN_NODE_VERSION}`;\nexport const CORE_JS_VERSION = '3.37';\n\nexport const LIB_VERSIONS = {\n  '@types/react': '18.2.x',\n  '@types/react-dom': '18.2.x',\n  react: '18.2.x',\n  'react-dom': '18.2.x',\n  'styled-components': '6.1.x',\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"source-map-loader\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"favicons-webpack-plugin\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"prettier\");","import {exec} from 'node:child_process';\nimport {promises, readFileSync} from 'node:fs';\nimport {dirname, join} from 'node:path';\n\nimport {BuiltInParserName, format} from 'prettier';\n\nexport const {access, readFile: readFileInternal, readdir, stat} = promises;\nconst {writeFile, mkdir, rm} = promises;\n\nexport async function readFile(path: string): Promise<string> {\n  const buffer = await readFileInternal(path);\n  return buffer.toString();\n}\n\nconst prettierConfig = (parser: BuiltInParserName) =>\n  ({\n    parser,\n    printWidth: 100,\n    singleQuote: true,\n    trailingComma: 'es5',\n    bracketSpacing: false,\n    arrowParens: 'avoid',\n    endOfLine: 'auto',\n  }) as const;\n\nexport async function prettierFormat(str: string, parser: BuiltInParserName): Promise<string> {\n  return await format(str, prettierConfig(parser));\n}\n\nexport async function writeRawFile(path: string, content: string): Promise<void> {\n  await mkdir(dirname(path), {recursive: true});\n  await writeFile(path, content);\n}\n\nexport async function prettyJson(json: unknown, opts?: {compact?: boolean}): Promise<string> {\n  const {compact} = opts ?? {};\n  return await format(\n    compact ? JSON.stringify(json) : JSON.stringify(json, undefined, 2),\n    prettierConfig('json')\n  );\n}\nexport async function prettyJsonc(json: unknown, opts?: {compact?: boolean}): Promise<string> {\n  const {compact} = opts ?? {};\n  return await format(\n    compact ? JSON.stringify(json) : JSON.stringify(json, undefined, 2),\n    prettierConfig('jsonc')\n  );\n}\nexport async function writeJsonFile(path: string, json: unknown): Promise<void> {\n  await writeRawFile(path, await prettyJson(json));\n}\n\nexport async function prettyJs(js: string): Promise<string> {\n  return await format(js, prettierConfig('babel'));\n}\nexport async function writeJsFile(path: string, js: string): Promise<void> {\n  await writeRawFile(path, await prettyJs(js));\n}\n\nexport async function prettyTs(ts: string): Promise<string> {\n  return await format(ts, prettierConfig('typescript'));\n}\nexport async function writeTsFile(path: string, ts: string): Promise<void> {\n  await writeRawFile(path, await prettyTs(ts));\n}\n\nexport async function writeRawFileIfNotExists(path: string, content: string): Promise<void> {\n  if (await exists(path)) {\n    return;\n  }\n  await writeRawFile(path, content);\n}\n\nexport async function rmDir(dirPath: string): Promise<void> {\n  await rm(dirPath, {recursive: true, force: true});\n}\n\nexport async function cleanDir(dirPath: string): Promise<void> {\n  try {\n    await rmDir(dirPath);\n  } finally {\n    await mkdir(dirPath, {recursive: true});\n  }\n}\n\nexport async function cp(from: string, to: string): Promise<void> {\n  return await new Promise((resolve, reject) => {\n    exec(`cp -R ${from} ${to}`, err => (err ? reject(err) : resolve()));\n  });\n}\n\nexport async function exists(path: string): Promise<boolean> {\n  try {\n    await access(path);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function maybeReadFile(path: string): Promise<string | undefined> {\n  try {\n    const fileContent = await readFile(path);\n    return fileContent.toString();\n  } catch {\n    return undefined;\n  }\n}\n\nexport function maybeReadFileSync(path: string): string | undefined {\n  try {\n    const fileContent = readFileSync(path);\n    return fileContent.toString();\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function listFiles(path: string): Promise<string[]> {\n  const files: string[] = [];\n  const ents = await readdir(path, {withFileTypes: true});\n  const promises: Promise<void>[] = [];\n  for (const ent of ents) {\n    const entPath = join(path, ent.name);\n    if (ent.isDirectory()) {\n      promises.push(\n        listFiles(entPath).then(subFiles => {\n          files.push(...subFiles);\n        })\n      );\n    } else if (ent.isFile()) {\n      files.push(entPath);\n    }\n  }\n  await Promise.all(promises);\n  return files;\n}\n","function notUndefined<T>(val: T | undefined): val is T {\n  return val !== undefined;\n}\n\nexport function isString(val: unknown): val is string {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val: unknown): val is number {\n  return typeof val === 'number';\n}\n\nexport function iterNumberEnum<T extends Record<string, string | number>>(e: T): T[keyof T][] {\n  return Object.values(e).filter(isNumber) as unknown as T[keyof T][];\n}\n\nexport function iterStringEnum<T extends Record<string, string>>(e: T): T[keyof T][] {\n  return Object.values(e).filter(isString) as unknown as T[keyof T][];\n}\n\nexport function removeUndefined<T>(arr: (T | undefined)[]): T[] {\n  return arr.filter(notUndefined);\n}\n\nexport function removeUndefinedOrNullProps<T extends Record<string, unknown>>(obj: T): {} {\n  return Object.fromEntries(\n    Object.entries(obj).filter(e => e[1] !== undefined && e[1] !== null)\n  ) as T;\n}\n\nexport function neverHappens(value: never, errorMessage?: string): never {\n  throw new Error(errorMessage);\n}\n\nexport type AnyInterface<T> = {[K in keyof T]: unknown};\n\nexport function asMap(value: unknown): Record<string, unknown> | undefined;\nexport function asMap(\n  value: unknown,\n  defaultValue: Record<string, unknown>\n): Record<string, unknown>;\nexport function asMap(\n  value: unknown,\n  defaultValue?: Record<string, unknown>\n): Record<string, unknown> | undefined {\n  return typeof value === 'object' && value !== null && !Array.isArray(value)\n    ? (value as Record<string, unknown>)\n    : defaultValue;\n}\nexport function asMapOrThrow(value: unknown): Record<string, unknown> {\n  const valueAsMap = asMap(value);\n  if (valueAsMap === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` is not a map`);\n  }\n  return valueAsMap;\n}\n\nexport function asJson(value: string): Record<string, unknown> | undefined;\nexport function asJson(\n  value: string,\n  defaultValue: Record<string, unknown>\n): Record<string, unknown>;\nexport function asJson(\n  value: string,\n  defaultValue?: Record<string, unknown>\n): Record<string, unknown> | undefined {\n  try {\n    const json = JSON.parse(value);\n    const res = asMap(json);\n    return res ?? defaultValue;\n  } catch {\n    return defaultValue;\n  }\n}\nexport function asJsonOrThrow(value: string): Record<string, unknown> {\n  const valueAsJson = asJson(value);\n  if (valueAsJson === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` is not a valid JSON string of a map`);\n  }\n  return valueAsJson;\n}\n\nexport function asJsonString(value: unknown): Record<string, unknown> | undefined;\nexport function asJsonString(\n  value: unknown,\n  defaultValue: Record<string, unknown>\n): Record<string, unknown>;\nexport function asJsonString(\n  value: unknown,\n  defaultValue?: Record<string, unknown>\n): Record<string, unknown> | undefined {\n  const str = asString(value);\n  return str === undefined\n    ? defaultValue\n    : defaultValue === undefined\n      ? asJson(str)\n      : asJson(str, defaultValue);\n}\nexport function asJsonStringOrThrow(value: unknown): Record<string, unknown> {\n  return asJsonOrThrow(asStringOrThrow(value));\n}\n\nexport function asString<T extends string = string>(value: unknown): T | undefined;\nexport function asString<T extends string = string>(value: unknown, defaultValue: string): T;\nexport function asString<T extends string = string>(\n  value: unknown,\n  defaultValue?: string\n): T | undefined {\n  return (typeof value === 'string' ? value : defaultValue) as T;\n}\nexport function asStringOrThrow<T extends string = string>(value: unknown): T {\n  const valueAsString = asString<T>(value);\n  if (valueAsString === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` is not a string`);\n  }\n  return valueAsString;\n}\n\nexport function asStringEnum<T extends Record<string, string>>(\n  value: unknown,\n  enu: T\n): T[keyof T] | undefined;\nexport function asStringEnum<T extends Record<string, string>>(\n  value: unknown,\n  enu: T,\n  defaultValue: T[keyof T]\n): T[keyof T];\nexport function asStringEnum<T extends Record<string, string>>(\n  value: unknown,\n  enu: T,\n  defaultValue?: T[keyof T]\n): T[keyof T] | undefined {\n  return (\n    typeof value === 'string' && Object.values(enu).includes(value as T[keyof T])\n      ? value\n      : defaultValue\n  ) as T[keyof T];\n}\nexport function asStringEnumOrThrow<T extends Record<string, string>>(\n  value: unknown,\n  enu: T\n): T[keyof T] {\n  const valueAsString = asStringEnum<T>(value, enu);\n  if (valueAsString === undefined) {\n    throw new Error(\n      `Invalid value: \\`${value}\\` is not a string or not one of ${JSON.stringify(\n        Object.values(enu)\n      )}`\n    );\n  }\n  return valueAsString;\n}\n\nexport function asArray<T = unknown>(value: unknown): T[] | undefined;\nexport function asArray<T = unknown>(value: unknown, defaultValue: unknown[]): T[];\nexport function asArray<T = unknown>(value: unknown, defaultValue?: unknown[]): T[] | undefined {\n  return (Array.isArray(value) ? value : defaultValue) as T[];\n}\nexport function asArrayOrThrow<T = unknown>(value: unknown): T[] {\n  if (!Array.isArray(value)) {\n    throw new Error(`Invalid value: \\`${value}\\` is not an array`);\n  }\n  return value as T[];\n}\n\nexport function asStringArray<T extends string = string>(value: unknown): T[] | undefined;\nexport function asStringArray<T extends string = string>(\n  value: unknown,\n  defaultValue: string[]\n): T[];\nexport function asStringArray<T extends string = string>(\n  value: unknown,\n  defaultValue?: string[]\n): T[] | undefined {\n  const arr = asArray(value);\n  if (arr === undefined) {\n    return defaultValue as T[];\n  }\n  return removeUndefined(arr.map(s => asString<T>(s)));\n}\n\nexport function asStringArrayOrThrow<T extends string = string>(value: unknown): T[] {\n  const arr = asArrayOrThrow(value);\n  return arr.map(s => asStringOrThrow<T>(s));\n}\n\nexport function asMapArray(value: unknown): Record<string, unknown>[] | undefined;\nexport function asMapArray(\n  value: unknown,\n  defaultValue: Record<string, unknown>[]\n): Record<string, unknown>[];\nexport function asMapArray(\n  value: unknown,\n  defaultValue?: Record<string, unknown>[]\n): Record<string, unknown>[] | undefined {\n  const arr = asArray(value);\n  if (arr === undefined) {\n    return defaultValue;\n  }\n  return removeUndefined(arr.map(s => asMap(s)));\n}\nexport function asMapArrayOrThrow(value: unknown): Record<string, unknown>[] {\n  const arr = asArrayOrThrow(value);\n  return arr.map(s => asMapOrThrow(s));\n}\n\nexport function asNumber<T extends number = number>(value: unknown): T | undefined;\nexport function asNumber<T extends number = number>(value: unknown, defaultValue: number): T;\nexport function asNumber<T extends number = number>(\n  value: unknown,\n  defaultValue?: number\n): T | undefined {\n  if (typeof value === 'number') {\n    return (!isNaN(value) ? value : defaultValue) as T;\n  }\n  if (typeof value === 'string') {\n    try {\n      const parsedValue = parseFloat(value);\n      return (!isNaN(parsedValue) ? parsedValue : defaultValue) as T;\n    } catch {\n      return defaultValue as T;\n    }\n  }\n  return defaultValue as T;\n}\nexport function asNumberOrThrow<T extends number = number>(value: unknown): T {\n  const valueAsNumber = asNumber(value);\n  if (valueAsNumber === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` is not a number`);\n  }\n  return valueAsNumber as T;\n}\n\nexport function asBoolean(value: unknown): boolean | undefined;\nexport function asBoolean(value: unknown, defaultValue: boolean): boolean;\nexport function asBoolean(value: unknown, defaultValue?: boolean): boolean | undefined {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  if (typeof value === 'number') {\n    return !isNaN(value) ? value !== 0 : false;\n  }\n  if (typeof value === 'string') {\n    if (value === '0' || value === 'false') {\n      return false;\n    } else if (value === '1' || value === 'true') {\n      return true;\n    }\n    return defaultValue;\n  }\n  return defaultValue;\n}\n\nexport function asBooleanOrThrow(value: unknown): boolean {\n  const valueAsBoolean = asBoolean(value);\n  if (valueAsBoolean === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` is not a boolean`);\n  }\n  return valueAsBoolean;\n}\n\nconst TIMESTAMP_REGEX = /^[0-9]{1,15}$/u;\nexport function asDate(value: unknown): Date | undefined;\nexport function asDate(value: unknown, defaultValue: Date): Date;\nexport function asDate(value: unknown, defaultValue?: Date): Date | undefined {\n  const date =\n    value instanceof Date\n      ? value\n      : new Date(\n          typeof value === 'string' && TIMESTAMP_REGEX.test(value)\n            ? parseFloat(value)\n            : String(value)\n        );\n  return isNaN(date.getTime()) ? defaultValue : date;\n}\n\nexport function asDateOrThrow(value: unknown): Date {\n  const valueAsDate = asDate(value);\n  if (valueAsDate === undefined) {\n    throw new Error(`Invalid value: \\`${value}\\` cannot be parsed as a Date`);\n  }\n  return valueAsDate;\n}\n\n// export function asDate(value: unknown): Date | undefined;\n// export function asDate(value: unknown, defaultValue: Date): Date;\n// export function asDate(value: unknown, defaultValue?: Date): Date | undefined {\n//   if (typeof value === 'number') {\n//     return new Date(value);\n//   }\n//   return value instanceof Date ? value : defaultValue;\n// }\n\nexport function isNull<T>(val: T | null): val is null {\n  return val === null;\n}\n\nexport function asError(err: unknown): Error {\n  return err instanceof Error ? err : new Error(typeof err === 'string' ? err : String(err));\n}\n\nexport function errorAsString(err: unknown): string {\n  const errorMap = asMap(err);\n  if (errorMap === undefined) {\n    return asString(err) ?? String(err);\n  }\n\n  const errorMessage = asString(errorMap['message']);\n  if (errorMessage === undefined) {\n    return String(err);\n  }\n  return errorMessage;\n}\n\nexport function errorAndStackAsString(err: unknown): string {\n  const errorMap = asMap(err);\n  if (errorMap === undefined) {\n    return asString(err) ?? String(err);\n  }\n\n  const stack = asString(errorMap['stack']);\n  if (stack === undefined) {\n    return String(err);\n  }\n  return stack;\n}\n\nexport function asConstantOrThrow<T>(value: unknown, expected: T): T {\n  if (value !== expected) {\n    throw new Error(`Invalid value: \\`${value}\\`, expected \\`${expected}\\``);\n  }\n  return value as T;\n}\n\n// export function asParsedJson<T>(json: string): T {\n//   try {\n//     return JSON.parse(json) as T;\n//   } catch {\n//     const defaultValue = {};\n//     return defaultValue as T;\n//   }\n// }\nexport function parseJson(\n  json: string\n): {res: unknown; err: undefined} | {res: undefined; err: unknown} {\n  try {\n    return {res: JSON.parse(json), err: undefined};\n  } catch (err: unknown) {\n    return {err, res: undefined};\n  }\n}\nexport type Brand<Type, Name> = Type & {__brand: Name};\nexport type StringBrand = string & {__brand: string};\nexport type NumberBrand = number & {__brand: number};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyBrand = (string | number) & {__brand: any};\n\nexport type Untrusted<T> = T extends\n  | Function\n  | Date\n  | boolean\n  | number\n  | string\n  | undefined\n  | null\n  | unknown[]\n  ? unknown\n  : {[P in keyof T]?: Untrusted<T[P]>};\n\nexport type DeepPartial<T> = T extends\n  | Function\n  | Date\n  | boolean\n  | number\n  | string\n  | undefined\n  | null\n  | unknown[]\n  ? T\n  : {[P in keyof T]?: DeepPartial<T[P]>};\n\nexport type MapInterface<I, Type> = {[Key in keyof I]: Type};\n// Get all the keys of a type including the optional attributes\ntype NonHomomorphicKeys<T> = ({[P in keyof T]: P} & None)[keyof T];\nexport type MapInterfaceStrict<I, Type> = {[Key in NonHomomorphicKeys<I>]: Type};\n\ntype KeysOfType<T, Type> = {[Key in keyof T]: T[Key] extends Type ? Key : never}[keyof T];\nexport type RestrictInterface<T, Type> = Pick<T, KeysOfType<T, Type>>;\n\ninterface RecursiveArray<T> extends Array<T | RecursiveArray<T>> {}\nexport type NestedArray<T> = (T | RecursiveArray<T>)[];\n\n// Type for an empty object (ie: {})\nexport type None = Record<string, never>;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\nexport function isNonEmptyArray<T>(val: T[]): val is NonEmptyArray<T> {\n  return val.length > 0;\n}\nexport function nonEmptyArray<T>(val: T[]): NonEmptyArray<T> | undefined {\n  return val.length === 0 ? undefined : (val as NonEmptyArray<T>);\n}\n\nexport type AddPrefix<T, P extends string> = {\n  [K in keyof T as K extends string ? `${P}${K}` : never]: T[K];\n};\nexport function addPrefix<T extends Record<string, unknown>, Prefix extends string>(\n  attr: T,\n  prefix: Prefix\n): AddPrefix<T, Prefix> {\n  return Object.fromEntries(\n    Object.entries(attr).map(([key, value]) => [`${prefix}${key}`, value])\n  ) as AddPrefix<T, Prefix>;\n}\n\nexport type WithNull<T> = {\n  [Key in keyof T]: T[Key] extends Exclude<T[Key], undefined> ? T[Key] : T[Key] | null;\n};\ntype Id<T> = T;\nexport type Flatten<T> = Id<{[k in keyof T]: T[k]}>;\n\nexport type Defined<T> = Exclude<T, undefined>;\n","import {existsSync} from 'node:fs';\nimport {join} from 'node:path';\n\nimport FaviconsWebpackPlugin from 'favicons-webpack-plugin';\n\nimport {maybeReadFileSync} from '@src/fs';\nimport {asMap, asString} from '@src/type_utils';\n\nfunction getFaviconPath(context: string): string | undefined {\n  const validExtensions = ['svg', 'png', 'jpg', 'jpeg'];\n  for (const ext of validExtensions) {\n    const faviconPath = join(context, `src/favicon.${ext}`);\n    if (existsSync(faviconPath)) {\n      return faviconPath;\n    }\n  }\n  return undefined;\n}\n\ninterface FaviconInfo {\n  appName: string;\n  locale: string;\n  background: string;\n}\n\nfunction getFaviconInfo(context: string): FaviconInfo {\n  const json = asMap(JSON.parse(maybeReadFileSync(join(context, `src/favicon.json`)) ?? '{}'), {});\n  const appName = asString(json['appName'], '');\n  const locale = asString(json['locale'], 'en_US');\n  const background = asString(json['background'], '#ffffff');\n  return {appName, locale, background};\n}\n\nexport function faviconsWebpackPlugin(\n  context: string,\n  publicUrl: string\n): FaviconsWebpackPlugin | undefined {\n  // Extract app info from favicon.json\n  const {appName, locale, background} = getFaviconInfo(context);\n\n  // Find the favicon path\n  const faviconPath = getFaviconPath(context);\n  if (faviconPath === undefined) {\n    return undefined;\n  }\n\n  const iconInfo = {\n    rotate: false,\n    offset: 10,\n    transparent: false,\n    background,\n  };\n  return new FaviconsWebpackPlugin({\n    logo: faviconPath,\n    logoMaskable: faviconPath,\n    cache: true,\n    inject: true,\n    mode: 'webapp',\n    favicons: {\n      appName,\n      appleStatusBarStyle: 'default',\n      start_url: '/',\n      lang: locale.replace('_', '-'),\n      path: `${publicUrl}/assets`,\n      background,\n      theme_color: background,\n      icons: {\n        appleIcon: iconInfo,\n        appleStartup: iconInfo,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } as any,\n    },\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"html-webpack-plugin\");","import {join} from 'node:path';\n\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\n\nimport {WebpackPlugin} from '@src/webpack/models';\n\nexport function htmlPlugin(context: string, publicUrl: string): WebpackPlugin {\n  return new HtmlWebpackPlugin({\n    template: join(context, 'src/index.html'),\n    publicPath: publicUrl,\n    minify: true,\n  });\n}\n","import {readFileSync} from 'node:fs';\nimport {basename, join} from 'node:path';\n\nimport {Configuration} from 'webpack';\n\nimport {baseConfig} from '@src/webpack/common-configs/base_config';\nimport {babelLoaderWeb} from '@src/webpack/loaders/babel_loader_web';\nimport {imagesLoader} from '@src/webpack/loaders/images_loader';\nimport {sourceMapLoader} from '@src/webpack/loaders/source_map_loader';\nimport {faviconsWebpackPlugin} from '@src/webpack/plugins/favicons_webpack_plugin';\nimport {htmlPlugin} from '@src/webpack/plugins/html_plugin';\n\nexport function webConfig(opts: {context: string; watch: boolean}): Configuration {\n  const {context, watch} = opts;\n  const base = baseConfig({context, watch});\n\n  // Hack to retrieve the public url from the env variables\n  const envVariableFilePath = join(context, '../shared/src/env.ts');\n  const domainNameEnvVariable = `${basename(context).toUpperCase()}_CLOUDFRONT_DOMAIN_NAME`;\n  const match = new RegExp(\n    `export const ${domainNameEnvVariable} =\\\\s*'(?<domainName>[^']*)'`,\n    'u'\n  ).exec(readFileSync(envVariableFilePath).toString());\n  const domainName = match?.[1] ?? 'domain-not-found';\n  const publicUrl = `https://${domainName}`;\n\n  return {\n    ...base,\n    target: 'web',\n    entry: {main: join(context, 'src/index.tsx')},\n    output: {\n      path: join(context, 'dist'),\n      filename: `[name].[contenthash].js`,\n      clean: true,\n      publicPath: '/',\n    },\n    module: {\n      rules: [babelLoaderWeb(), sourceMapLoader(), imagesLoader()],\n    },\n    resolve: {\n      extensions: ['.js', '.jsx', '.ts', '.tsx'],\n      modules: ['node_modules', '../shared-web/node_modules', '../shared/node_modules'],\n      alias: {\n        '@src': join(context, 'src'),\n        '@shared': join(context, '../shared/src'),\n        '@shared-web': join(context, '../shared-web/src'),\n      },\n    },\n    plugins: [\n      ...(base.plugins ?? []),\n      htmlPlugin(context, publicUrl),\n      faviconsWebpackPlugin(context, publicUrl),\n    ],\n    optimization: {\n      ...base.optimization,\n      splitChunks: {\n        cacheGroups: {\n          vendor: {\n            test: /[/\\\\]node_modules[/\\\\]/u,\n            chunks: 'initial',\n            name: 'vendor',\n            enforce: true,\n          },\n        },\n      },\n    },\n  };\n}\n","import {Configuration} from 'webpack';\n\nimport {definePlugin} from '@src/webpack/plugins/define_plugin';\nimport {eslintPlugin} from '@src/webpack/plugins/eslint_plugin';\nimport {forkTsCheckerPlugin} from '@src/webpack/plugins/fork_ts_checker_plugin';\nimport {terserPlugin} from '@src/webpack/plugins/terser_plugin';\nimport {YarnPlugin} from '@src/webpack/plugins/yarn_plugin';\n\nexport function baseConfig(opts: {context: string; watch: boolean}): Configuration {\n  const {context} = opts;\n\n  return {\n    mode: 'none',\n    context,\n    entry: {},\n    devtool: 'source-map',\n    plugins: [new YarnPlugin(), forkTsCheckerPlugin(context), eslintPlugin(), definePlugin()],\n    stats: false,\n    infrastructureLogging: {level: 'error'},\n    optimization: {\n      minimize: true,\n      minimizer: [terserPlugin()],\n      concatenateModules: true,\n      sideEffects: true,\n    },\n    experiments: {\n      backCompat: true,\n    },\n  };\n}\n","import webpack from 'webpack'; // eslint-disable-line import/no-named-as-default\n\nimport {WebpackPlugin} from '@src/webpack/models';\n\nexport function definePlugin(): WebpackPlugin {\n  return new webpack.DefinePlugin({\n    'process.env.NODE_ENV': '\"production\"',\n  });\n}\n","import TerserWebpackPlugin from 'terser-webpack-plugin';\n\nimport {WebpackPlugin} from '@src/webpack/models';\n\nexport function terserPlugin(): WebpackPlugin {\n  return new TerserWebpackPlugin({\n    terserOptions: {\n      format: {\n        comments: false,\n      },\n    },\n    extractComments: false,\n  });\n}\n","/* eslint-disable import/no-unassigned-import */\nimport '@babel/core';\nimport '@babel/preset-env';\nimport '@babel/preset-typescript';\nimport 'babel-loader';\nimport '@babel/preset-react';\nimport 'babel-plugin-styled-components';\n\nimport {CORE_JS_VERSION} from '@src/versions';\nimport {WebpackLoader} from '@src/webpack/models';\n/* eslint-enable import/no-unassigned-import */\n\nexport function babelLoaderWeb(): WebpackLoader {\n  return {\n    test: /\\.tsx?$/u,\n    exclude: /\\/node_modules\\//u,\n    loader: 'babel-loader',\n    options: {\n      presets: [\n        [\n          '@babel/preset-env',\n          {\n            targets: '> 10%',\n            bugfixes: true,\n            useBuiltIns: 'usage',\n            corejs: {version: CORE_JS_VERSION},\n          },\n        ],\n        ['@babel/preset-react', {runtime: 'automatic'}],\n        ['@babel/preset-typescript'],\n      ],\n      plugins: [\n        [\n          'babel-plugin-styled-components',\n          {\n            pure: true,\n          },\n        ],\n      ],\n    },\n  };\n}\n","/* eslint-disable import/no-unassigned-import */\nimport '@babel/core';\nimport '@babel/preset-env';\nimport '@babel/preset-typescript';\nimport 'babel-loader';\nimport 'source-map-loader';\n\nimport {WebpackLoader} from '@src/webpack/models';\n/* eslint-enable import/no-unassigned-import */\n\nexport function sourceMapLoader(): WebpackLoader {\n  return {\n    test: /\\.js$/u,\n    use: ['source-map-loader'],\n    enforce: 'pre',\n  };\n}\n","import {WebpackLoader} from '@src/webpack/models';\n\nexport function imagesLoader(): WebpackLoader {\n  return {\n    test: /\\.(?:png|jpg|jpeg)$/iu,\n    type: 'asset/resource',\n  };\n}\n","import {Configuration} from 'webpack';\n\nimport {webConfig} from '@src/webpack/common-configs/web_config';\n\nexport function config(opts: Parameters<typeof webConfig>[0]): Configuration {\n  return webConfig(opts);\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__WEBPACK_EXTERNAL_createRequire","url","ansiRegex","RegExp","join","error","console","log","globalError","val","data","str","Error","stack","String","JSON","stringify","appendFileSync","called","callbacks","runCallbacks","fn","Promise","resolve","catch","err","process","on","StandalonePlugin","context","cwd","apply","compiler","cb","this","hooks","beforeRun","tapPromise","name","async","setupHandler","watchRun","shutdown","exitHandlerAsync","exitHandler","push","hasStarted","setup","hasExited","teardown","EslintWebpackError","WebpackError","constructor","eslintRunId","message","filePath","loc","ruleId","super","undefined","file","EslintPlugin","fileStates","Map","shouldRun","runEslintInterval","setInterval","runEslint","projectPath","workspacePath","workspaceDirs","readdirSync","withFileTypes","filter","e","isDirectory","existsSync","map","patterns","flatMap","pattern","dir","watcher","watch","path","startsWith","set","status","delete","compilation","tap","comp","syncErrorsAndWarnings","afterCompile","tapAsync","setTimeout","awaitIdle","finally","filesQueued","entries","length","Math","random","handleError","currentState","tsConfigPath","ESLint","overrideConfig","settings","typescript","project","languageOptions","parserOptions","lintFiles","then","results","result","messages","checkIdle","eslintError","fileState","values","errors","w","warnings","sort","e1","e2","localeCompare","msg","replace","start","line","column","end","endLine","endColumn","resolveAwaitIdlePromise","state","clearInterval","close","forkTsCheckerPlugin","ForkTsCheckerWebpackPlugin","diagnosticOptions","syntactic","semantic","declaration","global","mode","configFile","formatter","logger","YarnPlugin","command","exec","stdout","stderr","split","l","trim","CORE_JS_VERSION","access","readFile","readFileInternal","readdir","stat","promises","writeFile","mkdir","rm","asMap","defaultValue","Array","isArray","asString","getFaviconInfo","json","parse","readFileSync","toString","maybeReadFileSync","appName","locale","background","faviconsWebpackPlugin","publicUrl","faviconPath","validExtensions","ext","getFaviconPath","iconInfo","rotate","offset","transparent","FaviconsWebpackPlugin","logo","logoMaskable","cache","inject","favicons","appleStatusBarStyle","start_url","lang","theme_color","icons","appleIcon","appleStartup","htmlPlugin","HtmlWebpackPlugin","template","publicPath","minify","webConfig","opts","base","entry","devtool","plugins","webpack","stats","infrastructureLogging","level","optimization","minimize","minimizer","TerserWebpackPlugin","terserOptions","format","comments","extractComments","concatenateModules","sideEffects","experiments","backCompat","baseConfig","envVariableFilePath","domainNameEnvVariable","basename","toUpperCase","match","target","main","output","filename","clean","rules","test","exclude","loader","options","presets","targets","bugfixes","useBuiltIns","corejs","version","runtime","pure","use","enforce","type","extensions","modules","alias","splitChunks","cacheGroups","vendor","chunks","config"],"sourceRoot":""}